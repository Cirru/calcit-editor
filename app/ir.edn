{:package "app",
 :root {:ns "main", :def "main!"},
 :files {"comp.leaf" {:ns ["ns"
                           "app.comp.leaf"
                           [":require-macros"
                            ["[]" "respo.macros" ":refer" ["[]" "defcomp" "<>" "span" "div" "input" "a"]]]
                           [":require"
                            ["[]" "clojure.string" ":as" "string"]
                            ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                            ["[]" "respo-ui.style" ":as" "ui"]
                            ["[]" "respo-ui.style.colors" ":as" "colors"]
                            ["[]" "respo.core" ":refer" ["[]" "create-comp"]]
                            ["[]" "respo.comp.space" ":refer" ["[]" "=<"]]
                            ["[]" "polyfill.core" ":refer" ["[]" "text-width*"]]
                            ["[]" "app.util.keycode" ":as" "keycode"]
                            ["[]" "app.util" ":as" "util"]]],
                      :defs {"comp-leaf" ["defcomp"
                                          "comp-leaf"
                                          ["states" "leaf" "focus" "coord" "by-other?" "first?"]
                                          ["let"
                                           [["state" ["or" [":data" "states"] "initial-state"]]
                                            ["text"
                                             ["if"
                                              [">" [":time" "state"] [":time" "leaf"]]
                                              [":text" "state"]
                                              [":text" "leaf"]]]
                                            ["focused?" ["=" "focus" "coord"]]
                                            ["has-blank?" ["or" ["=" "text" "|"] ["string/includes?" "text" "| "]]]]
                                           ["input"
                                            ["{}"
                                             [":value" "text"]
                                             [":class-name" ["if" ["=" "focus" "coord"] "|cirru-focused" "nil"]]
                                             [":placeholder" "coord"]
                                             [":style"
                                              ["merge"
                                               "style-leaf"
                                               ["{}"
                                                [":width"
                                                 ["+"
                                                  "8"
                                                  ["text-width*"
                                                   "text"
                                                   [":font-size" "style-leaf"]
                                                   [":font-family" "style-leaf"]]]]]
                                               ["if" "first?" ["{}" [":color" ["hsl" "50" "100" "70"]]]]
                                               ["if"
                                                "has-blank?"
                                                ["{}" [":background-color" ["hsl" "0" "0" "100" "0.3"]]]]
                                               ["if"
                                                ["or" "focused?" "by-other?"]
                                                ["{}" [":opacity" "1"] [":color" ":white"]]]]]
                                             [":on"
                                              ["{}"
                                               [":click" ["on-focus" "coord"]]
                                               [":keydown" ["on-keydown" "state" "leaf" "coord"]]
                                               [":input" ["on-input" "state" "coord"]]]]]]]],
                             "style-leaf" ["def"
                                           "style-leaf"
                                           ["merge"
                                            "ui/input"
                                            ["{}"
                                             [":line-height" "|14px"]
                                             [":height" "20"]
                                             [":margin" "|2px 0px"]
                                             [":padding" "|0 4px"]
                                             [":background-color" ":transparent"]
                                             [":min-width" "12"]
                                             [":color" ["hsl" "200" "30" "70"]]
                                             [":opacity" "0.8"]
                                             [":font-family" "|Menlo"]
                                             [":font-size" "14"]
                                             [":border-radius" "|4px"]
                                             [":vertical-align" ":baseline"]]]],
                             "on-focus" ["defn"
                                         "on-focus"
                                         ["coord"]
                                         ["fn" ["e" "d!" "m!"] ["d!" ":writer/focus" "coord"]]],
                             "on-keydown" ["defn"
                                           "on-keydown"
                                           ["state" "leaf" "coord"]
                                           ["fn"
                                            ["e" "d!" "m!"]
                                            ["let"
                                             [["event" [":original-event" "e"]]
                                              ["code" [":key-code" "e"]]
                                              ["shift?" [".-shiftKey" "event"]]
                                              ["text"
                                               ["if"
                                                [">" [":time" "state"] [":time" "leaf"]]
                                                [":text" "state"]
                                                [":text" "leaf"]]]
                                              ["text-length" ["count" "text"]]]
                                             ["cond"
                                              [["=" "code" "keycode/delete"]
                                               ["if" ["and" ["=" "|" "text"]] ["d!" ":ir/delete-node" "nil"]]]
                                              [["and" ["not" "shift?"] ["=" "code" "keycode/space"]]
                                               ["do" ["d!" ":ir/leaf-after" "nil"] [".preventDefault" "event"]]]
                                              [["and" "shift?" ["=" "code" "keycode/enter"]]
                                               ["d!" ":ir/leaf-before" "nil"]]
                                              [["=" "code" "keycode/tab"]
                                               ["do"
                                                ["d!" ["if" "shift?" ":ir/unindent-leaf" ":ir/indent"] "nil"]
                                                [".preventDefault" "event"]]]
                                              [["=" "code" "keycode/up"]
                                               ["do"
                                                ["if" ["not" ["empty?" "coord"]] ["d!" ":writer/go-up" "nil"]]
                                                [".preventDefault" "event"]]]
                                              [["=" "code" "keycode/left"]
                                               ["if"
                                                ["zero?" "event.target.selectionStart"]
                                                ["do" ["d!" ":writer/go-left" "nil"] [".preventDefault" "event"]]]]
                                              [["=" "code" "keycode/right"]
                                               ["if"
                                                ["=" "text-length" "event.target.selectionEnd"]
                                                ["do"
                                                 ["println" "text-length"]
                                                 ["d!" ":writer/go-right" "nil"]
                                                 [".preventDefault" "event"]]]]
                                              [":else" ["println" "|Keydown leaf" "code"]]]]]],
                             "on-input" ["defn"
                                         "on-input"
                                         ["state" "coord"]
                                         ["fn"
                                          ["e" "d!" "m!"]
                                          ["d!" ":ir/update-leaf" [":value" "e"]]
                                          ["m!" ["assoc" "state" ":text" [":value" "e"] ":time" ["util/now!"]]]]],
                             "initial-state" ["def" "initial-state" ["{}" [":text" "|"] [":time" "0"]]]},
                      :procs []},
         "comp.bookmark" {:ns ["ns"
                               "app.comp.bookmark"
                               [":require-macros" ["[]" "respo.macros" ":refer" ["[]" "defcomp" "<>" "span" "div" "a"]]]
                               [":require"
                                ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                                ["[]" "respo-ui.style" ":as" "ui"]
                                ["[]" "respo-ui.style.colors" ":as" "colors"]
                                ["[]" "respo.core" ":refer" ["[]" "create-comp"]]
                                ["[]" "respo.comp.space" ":refer" ["[]" "=<"]]]],
                          :defs {"comp-bookmark" ["defcomp"
                                                  "comp-bookmark"
                                                  ["bookmark" "idx"]
                                                  ["case"
                                                   [":kind" "bookmark"]
                                                   [":def"
                                                    ["div"
                                                     ["{}"
                                                      [":style" "style-bookmark"]
                                                      [":on" ["{}" [":click" ["on-pick" "idx"]]]]]
                                                     ["div"
                                                      ["{}"]
                                                      ["span"
                                                       ["{}"
                                                        [":inner-text" [":extra" "bookmark"]]
                                                        [":style" "style-main"]]]
                                                      ["=<" "8" "nil"]
                                                      ["span"
                                                       ["{}"
                                                        [":class-name" "|ion-md-close"]
                                                        [":style" "style-remove"]
                                                        [":on" ["{}" [":click" ["on-remove" "idx"]]]]]]]
                                                     ["div"
                                                      ["{}"]
                                                      ["<>" "span" "|def" "style-kind"]
                                                      ["=<" "8" "nil"]
                                                      ["<>" "span" [":ns" "bookmark"] "style-minor"]]]]
                                                   ["div"
                                                    ["{}"
                                                     [":style" "style-bookmark"]
                                                     [":on" ["{}" [":click" ["on-pick" "idx"]]]]]
                                                    ["div"
                                                     ["{}"]
                                                     ["<>" "span" [":ns" "bookmark"] "nil"]
                                                     ["=<" "16" "nil"]
                                                     ["span"
                                                      ["{}"
                                                       [":class-name" "|ion-md-close"]
                                                       [":style" "style-remove"]
                                                       [":on" ["{}" [":click" ["on-remove" "idx"]]]]]]]
                                                    ["div"
                                                     ["{}"]
                                                     ["<>" "span" ["name" [":kind" "bookmark"]] "style-kind"]]]]],
                                 "style-kind" ["def"
                                               "style-kind"
                                               ["{}" [":color" ["hsl" "0" "0" "50"]] [":font-family" "|Josefin Sans"]]],
                                 "style-bookmark" ["def"
                                                   "style-bookmark"
                                                   ["{}"
                                                    [":line-height" "|1.2em"]
                                                    [":padding" "|4px 0"]
                                                    [":cursor" ":pointer"]]],
                                 "on-pick" ["defn"
                                            "on-pick"
                                            ["idx"]
                                            ["fn" ["e" "d!" "m!"] ["d!" ":writer/point-to" "idx"]]],
                                 "style-minor" ["def" "style-minor" ["{}" [":color" ["hsl" "0" "0" "50"]]]],
                                 "style-remove" ["def"
                                                 "style-remove"
                                                 ["{}"
                                                  [":color" ["hsl" "0" "0" "80"]]
                                                  [":cursor" ":pointer"]
                                                  [":vertical-align" ":middle"]]],
                                 "style-main" ["def" "style-main" ["{}" [":vertical-align" ":middle"]]],
                                 "on-remove" ["defn"
                                              "on-remove"
                                              ["idx"]
                                              ["fn" ["e" "d!" "m!"] ["d!" ":writer/remove-idx" "idx"]]]},
                          :procs []},
         "comp.profile" {:ns ["ns"
                              "app.comp.profile"
                              [":require-macros" ["[]" "respo.macros" ":refer" ["[]" "defcomp" "<>" "span" "div" "a"]]]
                              [":require"
                               ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                               ["[]" "app.schema" ":as" "schema"]
                               ["[]" "respo-ui.style" ":as" "ui"]
                               ["[]" "respo-ui.style.colors" ":as" "colors"]
                               ["[]" "respo.core" ":refer" ["[]" "create-comp"]]
                               ["[]" "respo.comp.space" ":refer" ["[]" "=<"]]]],
                         :defs {"on-log-out" ["defn"
                                              "on-log-out"
                                              ["e" "dispatch!"]
                                              ["dispatch!" ":user/log-out" "nil"]
                                              [".removeItem" "js/localStorage" [":storage-key" "schema/configs"]]],
                                "comp-profile" ["defcomp"
                                                "comp-profile"
                                                ["user"]
                                                ["div"
                                                 ["{}" [":style" "ui/flex"]]
                                                 ["<>" "span" ["str" "|Hello! " [":name" "user"]] "nil"]
                                                 ["=<" "8" "nil"]
                                                 ["a"
                                                  ["{}"
                                                   [":style" "style-trigger"]
                                                   [":on" ["{}" [":click" "on-log-out"]]]]
                                                  ["<>" "span" "|Log out" "nil"]]]],
                                "style-trigger" ["def"
                                                 "style-trigger"
                                                 ["{}"
                                                  [":font-size" "14"]
                                                  [":cursor" ":pointer"]
                                                  [":background-color" "colors/motif-light"]
                                                  [":color" ":white"]
                                                  [":padding" "|0 8px"]]]},
                         :procs []},
         "util.keycode" {:ns ["ns" "app.util.keycode"],
                         :defs {"enter" ["def" "enter" "13"],
                                "delete" ["def" "delete" "8"],
                                "space" ["def" "space" "32"],
                                "tab" ["def" "tab" "9"],
                                "up" ["def" "up" "38"],
                                "down" ["def" "down" "40"],
                                "left" ["def" "left" "37"],
                                "right" ["def" "right" "39"]},
                         :procs []},
         "comp.page-editor" {:ns ["ns"
                                  "app.comp.page-editor"
                                  [":require-macros"
                                   ["[]" "respo.macros" ":refer" ["[]" "defcomp" "cursor->" "<>" "span" "div" "a"]]]
                                  [":require"
                                   ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                                   ["[]" "respo-ui.style" ":as" "ui"]
                                   ["[]" "respo-ui.style.colors" ":as" "colors"]
                                   ["[]" "respo.core" ":refer" ["[]" "create-comp"]]
                                   ["[]" "respo.comp.space" ":refer" ["[]" "=<"]]
                                   ["[]" "respo.comp.inspect" ":refer" ["[]" "comp-inspect"]]
                                   ["[]" "app.comp.bookmark" ":refer" ["[]" "comp-bookmark"]]
                                   ["[]" "app.comp.expr" ":refer" ["[]" "comp-expr"]]
                                   ["[]" "app.style" ":as" "style"]]],
                             :defs {"comp-page-editor" ["defcomp"
                                                        "comp-page-editor"
                                                        ["states" "stack" "router-data"]
                                                        ["div"
                                                         ["{}"
                                                          [":style" ["merge" "ui/row" "ui/flex" "style-container"]]]
                                                         ["div"
                                                          ["{}" [":style" "style-stack"]]
                                                          ["->>"
                                                           "stack"
                                                           ["map-indexed"
                                                            ["fn"
                                                             ["idx" "bookmark"]
                                                             ["[]" "idx" ["comp-bookmark" "bookmark" "idx"]]]]]]
                                                         ["div"
                                                          ["{}" [":style" "style-editor"]]
                                                          ["let"
                                                           [["others"
                                                             ["->>" [":others" "router-data"] ["vals"] ["into" ["#{}"]]]]]
                                                           ["cursor->"
                                                            ":root"
                                                            "comp-expr"
                                                            "states"
                                                            [":expr" "router-data"]
                                                            [":focus" "router-data"]
                                                            ["[]"]
                                                            "others"
                                                            "false"]]
                                                          ["comp-inspect" "|Expr" "router-data" "style/inspector"]]]],
                                    "style-stack" ["def" "style-stack" ["{}" [":width" "240"]]],
                                    "style-editor" ["def" "style-editor" ["merge" "ui/flex" ["{}"]]],
                                    "style-container" ["def" "style-container" ["{}" [":position" ":relative"]]]},
                             :procs []},
         "util" {:defs {"now!" ["defn" "now!" [] [".valueOf" ["js/Date."]]],
                        "coord-contains?" ["defn"
                                           "coord-contains?"
                                           ["xs" "ys"]
                                           ["if"
                                            ["empty?" "ys"]
                                            "true"
                                            ["if"
                                             ["=" ["first" "xs"] ["first" "ys"]]
                                             ["recur" ["rest" "xs"] ["rest" "ys"]]
                                             "false"]]],
                        "simple?" ["defn"
                                   "simple?"
                                   ["expr"]
                                   ["and"
                                    ["every?" ["fn" ["x"] ["=" ":leaf" [":type" "x"]]] ["vals" [":data" "expr"]]]
                                    ["<=" ["count" [":data" "expr"]] "6"]]]},
                 :ns ["ns" "app.util"],
                 :procs []},
         "schema" {:ns ["ns" "app.schema"],
                   :defs {"configs" ["def" "configs" ["{}" [":storage-key" "|workflow-storage"] [":port" "6001"]]]},
                   :procs []},
         "comp.container" {:ns ["ns"
                                "app.comp.container"
                                [":require-macros"
                                 ["[]" "respo.macros" ":refer" ["[]" "defcomp" "cursor->" "<>" "div" "span"]]]
                                [":require"
                                 ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                                 ["[]" "respo-ui.style" ":as" "ui"]
                                 ["[]" "respo-ui.style.colors" ":as" "colors"]
                                 ["[]" "respo.core" ":refer" ["[]" "create-comp"]]
                                 ["[]" "respo.comp.inspect" ":refer" ["[]" "comp-inspect"]]
                                 ["[]" "app.comp.header" ":refer" ["[]" "comp-header"]]
                                 ["[]" "app.comp.profile" ":refer" ["[]" "comp-profile"]]
                                 ["[]" "app.comp.login" ":refer" ["[]" "comp-login"]]
                                 ["[]" "respo-message.comp.msg-list" ":refer" ["[]" "comp-msg-list"]]
                                 ["[]" "app.comp.page-files" ":refer" ["[]" "comp-page-files"]]
                                 ["[]" "app.comp.page-editor" ":refer" ["[]" "comp-page-editor"]]
                                 ["[]" "app.comp.page-members" ":refer" ["[]" "comp-page-members"]]]],
                           :defs {"style-alert" ["def"
                                                 "style-alert"
                                                 ["{}"
                                                  [":font-family" "|Josefin Sans"]
                                                  [":font-weight" "100"]
                                                  [":font-size" "40"]]],
                                  "comp-container" ["defcomp"
                                                    "comp-container"
                                                    ["states" "store"]
                                                    ["let"
                                                     [["state" [":data" "states"]]
                                                      ["session" [":session" "store"]]
                                                      ["writer" [":writer" "session"]]]
                                                     ["if"
                                                      ["nil?" "store"]
                                                      ["div"
                                                       ["{}"
                                                        [":style" ["merge" "ui/global" "ui/fullscreen" "ui/center"]]]
                                                       ["<>" "span" "|No connection!" "style-alert"]]
                                                      ["div"
                                                       ["{}"
                                                        [":style"
                                                         ["merge"
                                                          "ui/global"
                                                          "ui/fullscreen"
                                                          "ui/column"
                                                          "style-container"]]]
                                                       ["comp-header" [":logged-in?" "store"]]
                                                       ["div"
                                                        ["{}" [":style" ["merge" "ui/row" "ui/flex" "style-body"]]]
                                                        ["if"
                                                         [":logged-in?" "store"]
                                                         ["let"
                                                          [["router" [":router" "store"]]]
                                                          ["case"
                                                           [":name" "router"]
                                                           [":profile" ["comp-profile" [":user" "store"]]]
                                                           [":files"
                                                            ["cursor->"
                                                             ":files"
                                                             "comp-page-files"
                                                             "states"
                                                             [":selected-ns" "writer"]
                                                             [":data" "router"]]]
                                                           [":editor"
                                                            ["cursor->"
                                                             ":editor"
                                                             "comp-page-editor"
                                                             "states"
                                                             [":stack" "writer"]
                                                             [":data" "router"]]]
                                                           [":members" ["comp-page-members"]]
                                                           ["div"
                                                            ["{}"]
                                                            ["<>"
                                                             "span"
                                                             ["str" "|404 page: " ["pr-str" "router"]]
                                                             "nil"]]]]
                                                         ["comp-login" "states"]]]
                                                       ["comp-inspect" "|Store" "store" "style-inspector"]
                                                       ["comp-msg-list"
                                                        ["get-in" "store" ["[]" ":session" ":notifications"]]
                                                        ":session/remove-notification"]]]]],
                                  "style-body" ["def" "style-body" ["{}" [":padding" "|8px 16px"]]],
                                  "style-container" ["def"
                                                     "style-container"
                                                     ["{}" [":background-color" ":black"] [":color" ":white"]]],
                                  "style-inspector" ["def"
                                                     "style-inspector"
                                                     ["{}"
                                                      [":bottom" "0"]
                                                      [":left" "0"]
                                                      [":max-width" "|100%"]
                                                      [":background-color" ["hsl" "0" "0" "50"]]
                                                      [":color" ":black"]
                                                      [":opacity" "1"]]]},
                           :procs []},
         "util.dom" {:ns ["ns" "app.util.dom"],
                     :defs {"focus!" ["defn"
                                      "focus!"
                                      []
                                      ["js/requestAnimationFrame"
                                       ["fn"
                                        ["timestamp"]
                                        ["let"
                                         [["current-focused" [".-activeElement" "js/document"]]
                                          ["cirru-focused" [".querySelector" "js/document" "|.cirru-focused"]]]
                                         ["if"
                                          ["some?" "cirru-focused"]
                                          ["if" ["not=" "current-focused" "cirru-focused"] [".focus" "cirru-focused"]]
                                          ["println" "|[Editor] .cirru-focused not found" "cirru-focused"]]]]]]},
                     :procs []},
         "style" {:ns ["ns"
                       "app.style"
                       [":require" ["[]" "respo-ui.style" ":as" "ui"] ["[]" "hsl.core" ":refer" ["[]" "hsl"]]]],
                  :defs {"input" ["def" "input" ["merge" "ui/input" ["{}"]]],
                         "button" ["def" "button" ["merge" "ui/button" ["{}"]]],
                         "title" ["def"
                                  "title"
                                  ["{}"
                                   [":font-family" "|Josefin Sans"]
                                   [":font-size" "20"]
                                   [":font-weight" "100"]
                                   [":color" ["hsl" "0" "0" "80"]]]],
                         "click" ["def" "click" ["{}" [":text-decoration" ":underline"]]],
                         "inspector" ["def"
                                      "inspector"
                                      ["{}"
                                       [":opacity" "0.9"]
                                       [":background-color" ["hsl" "0" "0" "90"]]
                                       [":color" ":black"]]]},
                  :procs []},
         "main" {:ns ["ns"
                      "app.main"
                      [":require"
                       ["[]" "respo.core" ":refer" ["[]" "render!" "clear-cache!" "realize-ssr!"]]
                       ["[]" "respo.cursor" ":refer" ["[]" "mutate"]]
                       ["[]" "app.comp.container" ":refer" ["[]" "comp-container"]]
                       ["[]" "cljs.reader" ":refer" ["[]" "read-string"]]
                       ["[]" "app.network" ":refer" ["[]" "send!" "setup-socket!"]]
                       ["[]" "app.schema" ":as" "schema"]
                       ["[]" "app.util.dom" ":refer" ["[]" "focus!"]]]],
                 :defs {"ssr?" ["def" "ssr?" ["some?" [".querySelector" "js/document" "|meta.respo-ssr"]]],
                        "dispatch!" ["defn"
                                     "dispatch!"
                                     ["op" "op-data"]
                                     [".info" "js/console" "|Dispatch" ["str" "op"] ["clj->js" "op-data"]]
                                     ["if"
                                      ["=" "op" ":states"]
                                      ["reset!" "*states" [["mutate" "op-data"] "@*states"]]
                                      ["send!" "op" "op-data"]]],
                        "*store" ["defonce" "*store" ["atom" "nil"]],
                        "main!" ["defn"
                                 "main!"
                                 []
                                 ["if" "ssr?" ["render-app!" "realize-ssr!"]]
                                 ["render-app!" "render!"]
                                 ["setup-socket!"
                                  "*store"
                                  ["{}"
                                   [":url"
                                    ["str" "|ws://" [".-hostname" "js/location"] "|:" [":port" "schema/configs"]]]
                                   [":on-close!"
                                    ["fn"
                                     ["event"]
                                     ["reset!" "*store" "nil"]
                                     [".error" "js/console" "|Lost connection!"]]]
                                   [":on-open!" ["fn" ["event"] ["simulate-login!"]]]]]
                                 ["add-watch" "*store" ":changes" ["fn" [] ["render-app!" "render!"] ["focus!"]]]
                                 ["add-watch" "*states" ":changes" ["fn" [] ["render-app!" "render!"]]]
                                 ["println" "|App started!"]],
                        "*states" ["defonce" "*states" ["atom" ["{}"]]],
                        "simulate-login!" ["defn"
                                           "simulate-login!"
                                           []
                                           ["let"
                                            [["raw" [".getItem" "js/localStorage" [":storage-key" "schema/configs"]]]]
                                            ["if"
                                             ["some?" "raw"]
                                             ["do"
                                              ["println" "|Found storage."]
                                              ["dispatch!" ":user/log-in" ["read-string" "raw"]]]
                                             ["do" ["println" "|Found no storage."]]]]],
                        "render-app!" ["defn"
                                       "render-app!"
                                       ["renderer"]
                                       ["renderer" "mount-target" ["comp-container" "@*states" "@*store"] "dispatch!"]],
                        "reload!" ["defn"
                                   "reload!"
                                   []
                                   ["clear-cache!"]
                                   ["render-app!" "render!"]
                                   ["println" "|Code updated."]],
                        "mount-target" ["def" "mount-target" [".querySelector" "js/document" "|.app"]]},
                 :procs [["set!" "js/window.onload" "main!"]]},
         "network" {:ns ["ns"
                         "app.network"
                         [":require-macros" ["[]" "cljs.core.async.macros" ":refer" ["[]" "go"]]]
                         [":require"
                          ["[]" "cljs.reader" ":as" "reader"]
                          ["[]" "cljs.core.async" ":as" "a" ":refer" ["[]" ">!" "<!" "chan" "timeout"]]
                          ["[]" "recollect.patch" ":refer" ["[]" "patch-bunch"]]]],
                    :defs {"sender" ["defonce" "sender" ["chan"]],
                           "send!" ["defn" "send!" ["op" "op-data"] ["go" [">!" "sender" ["[]" "op" "op-data"]]]],
                           "setup-socket!" ["defn"
                                            "setup-socket!"
                                            ["*store" "configs"]
                                            ["let"
                                             [["ws-url" [":url" "configs"]]
                                              ["ws" ["js/WebSocket." "ws-url"]]
                                              ["handle-close!"
                                               ["if"
                                                ["fn?" [":on-close!" "configs"]]
                                                [":on-close!" "configs"]
                                                "identity"]]
                                              ["handle-open!"
                                               ["if" ["fn?" [":on-open!" "configs"]] [":on-open!" "configs"] "identity"]]]
                                             ["set!" "ws.onopen" ["fn" ["event"] ["handle-open!" "event"]]]
                                             ["set!" "ws.onclose" ["fn" ["event"] ["handle-close!" "event"]]]
                                             ["set!"
                                              "ws.onmessage"
                                              ["fn"
                                               ["event"]
                                               ["let"
                                                [["changes" ["reader/read-string" "event.data"]]]
                                                [".log" "js/console" "|Changes" ["clj->js" "changes"]]
                                                ["reset!" "*store" ["patch-bunch" "@*store" "changes"]]]]]
                                             ["go" ["loop" ["[]"] [".send" "ws" ["pr-str" ["<!" "sender"]]] ["recur"]]]]]},
                    :procs []},
         "comp.login" {:ns ["ns"
                            "app.comp.login"
                            [":require-macros"
                             ["[]" "respo.macros" ":refer" ["[]" "defcomp" "<>" "div" "input" "button" "span"]]]
                            [":require"
                             ["[]" "respo.core" ":refer" ["[]" "create-comp"]]
                             ["[]" "respo.comp.space" ":refer" ["[]" "=<"]]
                             ["[]" "respo.comp.inspect" ":refer" ["[]" "comp-inspect"]]
                             ["[]" "respo-ui.style" ":as" "ui"]
                             ["[]" "app.schema" ":as" "schema"]]],
                       :defs {"on-submit" ["defn"
                                           "on-submit"
                                           ["username" "password" "signup?"]
                                           ["fn"
                                            ["e" "dispatch!"]
                                            ["dispatch!"
                                             ["if" "signup?" ":user/sign-up" ":user/log-in"]
                                             ["[]" "username" "password"]]
                                            [".setItem"
                                             "js/localStorage"
                                             [":storage-key" "schema/configs"]
                                             ["[]" "username" "password"]]]],
                              "on-input" ["defn"
                                          "on-input"
                                          ["state" "k"]
                                          ["fn"
                                           ["e" "dispatch!" "mutate!"]
                                           ["mutate!" ["assoc" "state" "k" [":value" "e"]]]]],
                              "comp-login" ["defcomp"
                                            "comp-login"
                                            ["states"]
                                            ["let"
                                             [["state" ["or" [":data" "states"] "initial-state"]]]
                                             ["div"
                                              ["{}"]
                                              ["div"
                                               ["{}" [":style" ["{}"]]]
                                               ["div"
                                                ["{}"]
                                                ["input"
                                                 ["{}"
                                                  [":placeholder" "|Username"]
                                                  [":value" [":username" "state"]]
                                                  [":style" "ui/input"]
                                                  [":on" ["{}" [":input" ["on-input" "state" ":username"]]]]]]]
                                               ["=<" "nil" "8"]
                                               ["div"
                                                ["{}"]
                                                ["input"
                                                 ["{}"
                                                  [":placeholder" "|Password"]
                                                  [":value" [":password" "state"]]
                                                  [":style" "ui/input"]
                                                  [":on" ["{}" [":input" ["on-input" "state" ":password"]]]]]]]]
                                              ["=<" "nil" "8"]
                                              ["div"
                                               ["{}" [":style" "ui/flex"]]
                                               ["button"
                                                ["{}"
                                                 [":inner-text" "|Sign up"]
                                                 [":style"
                                                  ["merge" "ui/button" ["{}" [":outline" ":none"] [":border" ":none"]]]]
                                                 [":on"
                                                  ["{}"
                                                   [":click"
                                                    ["on-submit" [":username" "state"] [":password" "state"] "true"]]]]]]
                                               ["=<" "8" "nil"]
                                               ["button"
                                                ["{}"
                                                 [":inner-text" "|Sign in"]
                                                 [":style"
                                                  ["merge" "ui/button" ["{}" [":outline" ":none"] [":border" ":none"]]]]
                                                 [":on"
                                                  ["{}"
                                                   [":click"
                                                    ["on-submit" [":username" "state"] [":password" "state"] "false"]]]]]]]]]],
                              "initial-state" ["def" "initial-state" ["{}" [":username" "|"] [":password" "|"]]]},
                       :procs []},
         "comp.page-files" {:ns ["ns"
                                 "app.comp.page-files"
                                 [":require-macros"
                                  ["[]"
                                   "respo.macros"
                                   ":refer"
                                   ["[]" "defcomp" "<>" "span" "div" "pre" "input" "button" "a"]]]
                                 [":require"
                                  ["[]" "clojure.string" ":as" "string"]
                                  ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                                  ["[]" "respo-ui.style" ":as" "ui"]
                                  ["[]" "respo-ui.style.colors" ":as" "colors"]
                                  ["[]" "respo.core" ":refer" ["[]" "create-comp"]]
                                  ["[]" "respo.comp.inspect" ":refer" ["[]" "comp-inspect"]]
                                  ["[]" "respo.comp.space" ":refer" ["[]" "=<"]]
                                  ["[]" "app.style" ":as" "style"]]],
                            :defs {"on-add" ["defn"
                                             "on-add"
                                             ["state"]
                                             ["fn"
                                              ["e" "d!" "m!"]
                                              ["let"
                                               [["text" ["string/trim" [":ns-text" "state"]]]]
                                               ["if"
                                                ["not" ["string/blank?" "text"]]
                                                ["do"
                                                 ["d!" ":ir/add-ns" "text"]
                                                 ["m!" ["assoc" "state" ":ns-text" "|"]]]]]]],
                                   "on-remove-ns" ["defn"
                                                   "on-remove-ns"
                                                   ["ns-text"]
                                                   ["fn" ["e" "d!" "m!"] ["d!" ":ir/remove-ns" "ns-text"]]],
                                   "on-edit-proc" ["defn"
                                                   "on-edit-proc"
                                                   ["e" "d!" "m!"]
                                                   ["d!" ":writer/edit" ["{}" [":kind" ":proc"]]]],
                                   "render-file" ["defn"
                                                  "render-file"
                                                  ["state" "selected-ns" "defs-set"]
                                                  ["div"
                                                   ["{}" [":style" "ui/flex"]]
                                                   ["div"
                                                    ["{}"]
                                                    ["<>" "span" "|File" "style/title"]
                                                    ["=<" "16" "nil"]
                                                    ["<>" "span" "selected-ns" "nil"]]
                                                   ["div"
                                                    ["{}"]
                                                    ["span"
                                                     ["{}"
                                                      [":inner-text" "|ns"]
                                                      [":style" "style-link"]
                                                      [":on" ["{}" [":click" "on-edit-ns"]]]]]
                                                    ["=<" "16" "nil"]
                                                    ["span"
                                                     ["{}"
                                                      [":inner-text" "|proc"]
                                                      [":style" "style-link"]
                                                      [":on" ["{}" [":click" "on-edit-proc"]]]]]]
                                                   ["div"
                                                    ["{}"]
                                                    ["->>"
                                                     "defs-set"
                                                     ["map"
                                                      ["fn"
                                                       ["def-text"]
                                                       ["[]"
                                                        "def-text"
                                                        ["div"
                                                         ["{}"]
                                                         ["span"
                                                          ["{}"
                                                           [":inner-text" "def-text"]
                                                           [":style" "style-def"]
                                                           [":on" ["{}" [":click" ["on-edit-def" "def-text"]]]]]]
                                                         ["=<" "16" "nil"]
                                                         ["span"
                                                          ["{}"
                                                           [":class-name" "|ion-md-close"]
                                                           [":style" "style-remove"]
                                                           [":on" ["{}" [":click" ["on-remove-def" "def-text"]]]]]]]]]]]]
                                                   ["div"
                                                    ["{}"]
                                                    ["input"
                                                     ["{}"
                                                      [":value" [":def-text" "state"]]
                                                      [":placeholder" "|a def"]
                                                      [":style" "style/input"]
                                                      [":on" ["{}" [":input" ["on-input-def" "state"]]]]]]
                                                    ["=<" "8" "nil"]
                                                    ["button"
                                                     ["{}"
                                                      [":inner-text" "|Add def"]
                                                      [":style" "style/button"]
                                                      [":on" ["{}" [":click" ["on-add-def" "state"]]]]]]]]],
                                   "on-input-def" ["defn"
                                                   "on-input-def"
                                                   ["state"]
                                                   ["fn"
                                                    ["e" "d!" "m!"]
                                                    ["m!" ["assoc" "state" ":def-text" [":value" "e"]]]]],
                                   "style-ns" ["def"
                                               "style-ns"
                                               ["{}" [":cursor" ":pointer"] [":vertical-align" ":middle"]]],
                                   "on-remove-def" ["defn"
                                                    "on-remove-def"
                                                    ["def-text"]
                                                    ["fn" ["e" "d!" "m!"] ["d!" ":ir/remove-def" "def-text"]]],
                                   "style-list" ["def" "style-list" ["{}" [":width" "320"]]],
                                   "on-checkout" ["defn"
                                                  "on-checkout"
                                                  ["state" "ns-text"]
                                                  ["fn" ["e" "d!" "m!"] ["d!" ":session/select-ns" "ns-text"]]],
                                   "on-input-ns" ["defn"
                                                  "on-input-ns"
                                                  ["state"]
                                                  ["fn"
                                                   ["e" "d!" "m!"]
                                                   ["m!" ["assoc" "state" ":ns-text" [":value" "e"]]]]],
                                   "comp-page-files" ["defcomp"
                                                      "comp-page-files"
                                                      ["states" "selected-ns" "router-data"]
                                                      ["let"
                                                       [["state" ["or" [":data" "states"] "initial-state"]]]
                                                       ["div"
                                                        ["{}" [":style" ["merge" "ui/flex" "ui/row"]]]
                                                        ["render-list" [":ns-set" "router-data"] "state"]
                                                        ["if"
                                                         ["some?" "selected-ns"]
                                                         ["render-file"
                                                          "state"
                                                          "selected-ns"
                                                          [":defs-set" "router-data"]]
                                                         ["render-empty"]]
                                                        ["--" "comp-inspect" "selected-ns" "nil" "style-inspect"]]]],
                                   "render-empty" ["defn" "render-empty" [] ["div" ["{}"] ["<>" "span" "|Empty" "nil"]]],
                                   "initial-state" ["def" "initial-state" ["{}" [":ns-text" "|"] [":def-text" "|"]]],
                                   "style-inspect" ["def"
                                                    "style-inspect"
                                                    ["{}"
                                                     [":opacity" "1"]
                                                     [":background-color" ["hsl" "0" "0" "100"]]
                                                     [":color" ":black"]]],
                                   "style-def" ["def"
                                                "style-def"
                                                ["{}" [":cursor" ":pointer"] [":vertical-align" ":middle"]]],
                                   "style-remove" ["def"
                                                   "style-remove"
                                                   ["{}"
                                                    [":color" ["hsl" "0" "0" "80"]]
                                                    [":cursor" ":pointer"]
                                                    [":vertical-align" ":middle"]]],
                                   "on-add-def" ["defn"
                                                 "on-add-def"
                                                 ["state"]
                                                 ["fn"
                                                  ["e" "d!" "m!"]
                                                  ["let"
                                                   [["text" ["string/trim" [":def-text" "state"]]]]
                                                   ["if"
                                                    ["not" ["string/blank?" "text"]]
                                                    ["do"
                                                     ["d!" ":ir/add-def" "text"]
                                                     ["m!" ["assoc" "state" ":def-text" "|"]]]]]]],
                                   "render-list" ["defn"
                                                  "render-list"
                                                  ["ns-set" "state"]
                                                  ["div"
                                                   ["{}" [":style" "style-list"]]
                                                   ["div"
                                                    ["{}" [":style" "style/title"]]
                                                    ["<>" "span" "|Namespaces" "nil"]]
                                                   ["div"
                                                    ["{}"]
                                                    ["->>"
                                                     "ns-set"
                                                     ["map"
                                                      ["fn"
                                                       ["ns-text"]
                                                       ["[]"
                                                        "ns-text"
                                                        ["div"
                                                         ["{}" [":style" "style-ns"]]
                                                         ["span"
                                                          ["{}"
                                                           [":inner-text" "ns-text"]
                                                           [":on" ["{}" [":click" ["on-checkout" "state" "ns-text"]]]]]]
                                                         ["=<" "16" "nil"]
                                                         ["span"
                                                          ["{}"
                                                           [":class-name" "|ion-md-close"]
                                                           [":style" "style-remove"]
                                                           [":on" ["{}" [":click" ["on-remove-ns" "ns-text"]]]]]]]]]]]]
                                                   ["div"
                                                    ["{}"]
                                                    ["input"
                                                     ["{}"
                                                      [":value" [":ns-text" "state"]]
                                                      [":placeholder" "|a namespace"]
                                                      [":style" "style/input"]
                                                      [":on" ["{}" [":input" ["on-input-ns" "state"]]]]]]
                                                    ["=<" "8" "nil"]
                                                    ["button"
                                                     ["{}"
                                                      [":inner-text" "|Add ns"]
                                                      [":style" "style/button"]
                                                      [":on" ["{}" [":click" ["on-add" "state"]]]]]]]]],
                                   "style-link" ["def" "style-link" ["{}" [":cursor" ":pointer"]]],
                                   "on-edit-ns" ["defn"
                                                 "on-edit-ns"
                                                 ["e" "d!" "m!"]
                                                 ["d!" ":writer/edit" ["{}" [":kind" ":ns"]]]],
                                   "on-edit-def" ["defn"
                                                  "on-edit-def"
                                                  ["text"]
                                                  ["fn"
                                                   ["e" "d!" "m!"]
                                                   ["d!" ":writer/edit" ["{}" [":kind" ":def"] [":extra" "text"]]]]]},
                            :procs []},
         "render" {:ns ["ns"
                        "app.render"
                        [":require"
                         ["[]" "respo.render.html" ":refer" ["[]" "make-string"]]
                         ["[]" "shell-page.core" ":refer" ["[]" "make-page" "spit" "slurp"]]
                         ["[]" "app.comp.container" ":refer" ["[]" "comp-container"]]]],
                   :defs {"main!" ["defn"
                                   "main!"
                                   []
                                   ["if"
                                    ["=" "js/process.env.env" "|dev"]
                                    ["spit" "|target/index.html" ["dev-page"]]
                                    ["spit" "|dist/index.html" ["prod-page"]]]],
                          "base-info" ["def"
                                       "base-info"
                                       ["{}"
                                        [":title" "|Editor"]
                                        [":icon" "|http://logo.cumulo.org/cumulo.png"]
                                        [":ssr" "nil"]
                                        [":inner-html" "nil"]]],
                          "dev-page" ["defn"
                                      "dev-page"
                                      []
                                      ["make-page"
                                       "|"
                                       ["merge"
                                        "base-info"
                                        ["{}"
                                         [":styles" ["[]"]]
                                         [":scripts" ["[]" "|/main.js" "|/browser/lib.js" "|/browser/main.js"]]]]]],
                          "prod-page" ["defn"
                                       "prod-page"
                                       []
                                       ["let"
                                        [["html-content" ["make-string" ["comp-container" ["{}"] "nil"]]]
                                         ["manifest" [".parse" "js/JSON" ["slurp" "|dist/assets-manifest.json"]]]
                                         ["cljs-manifest" [".parse" "js/JSON" ["slurp" "|dist/manifest.json"]]]]
                                        ["make-page"
                                         "html-content"
                                         ["merge"
                                          "base-info"
                                          ["{}"
                                           [":styles" ["[]" ["aget" "manifest" "|main.css"]]]
                                           [":scripts"
                                            ["[]"
                                             ["aget" "manifest" "|main.js"]
                                             ["->" "cljs-manifest" ["aget" "0"] ["aget" "|js-name"]]
                                             ["->" "cljs-manifest" ["aget" "1"] ["aget" "|js-name"]]]]]]]]]},
                   :procs []},
         "comp.header" {:ns ["ns"
                             "app.comp.header"
                             [":require-macros" ["[]" "respo.macros" ":refer" ["[]" "defcomp" "<>" "span" "div"]]]
                             [":require"
                              ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                              ["[]" "respo-ui.style" ":as" "ui"]
                              ["[]" "respo-ui.style.colors" ":as" "colors"]
                              ["[]" "respo.core" ":refer" ["[]" "create-comp"]]
                              ["[]" "respo.comp.space" ":refer" ["[]" "=<"]]]],
                        :defs {"on-profile" ["defn"
                                             "on-profile"
                                             ["e" "dispatch!"]
                                             ["dispatch!"
                                              ":router/change"
                                              ["{}" [":name" ":profile"] [":data" "nil"] [":router" "nil"]]]],
                               "comp-header" ["defcomp"
                                              "comp-header"
                                              ["logged-in?"]
                                              ["div"
                                               ["{}" [":style" ["merge" "ui/row-center" "style-header"]]]
                                               ["div"
                                                ["{}" [":style" "ui/row"]]
                                                ["div"
                                                 ["{}" [":on" ["{}" [":click" "on-files"]]] [":style" "style-entry"]]
                                                 ["<>" "span" "|Files" "nil"]]
                                                ["=<" "8" "nil"]
                                                ["div"
                                                 ["{}" [":on" ["{}" [":click" "on-editor"]]] [":style" "style-entry"]]
                                                 ["<>" "span" "|Editor" "nil"]]
                                                ["=<" "8" "nil"]
                                                ["div"
                                                 ["{}" [":on" ["{}" [":click" "on-members"]]] [":style" "style-entry"]]
                                                 ["<>" "span" "|Members" "nil"]]]
                                               ["div"
                                                ["{}" [":style" "style-pointer"] [":on" ["{}" [":click" "on-profile"]]]]
                                                ["<>" "span" ["if" "logged-in?" "|Me" "|Guest"] "nil"]]]],
                               "style-pointer" ["def" "style-pointer" ["{}" [":cursor" "|pointer"]]],
                               "style-header" ["def"
                                               "style-header"
                                               ["{}"
                                                [":height" "48"]
                                                [":justify-content" ":space-between"]
                                                [":padding" "|0 16px"]
                                                [":font-size" "16"]
                                                [":color" ":white"]
                                                [":border-bottom" ["str" "|1px solid " ["hsl" "0" "0" "30"]]]
                                                [":font-family" "|Josefin Sans"]
                                                [":font-weight" "100"]
                                                [":font-size" "20"]]],
                               "style-entry" ["def" "style-entry" ["{}" [":cursor" ":pointer"] [":width" "80"]]],
                               "on-files" ["defn"
                                           "on-files"
                                           ["e" "dispatch!" "m!"]
                                           ["dispatch!" ":router/change" ["{}" [":name" ":files"]]]],
                               "on-editor" ["defn"
                                            "on-editor"
                                            ["e" "d!" "m!"]
                                            ["d!" ":router/change" ["{}" [":name" ":editor"]]]],
                               "on-members" ["defn"
                                             "on-members"
                                             ["e" "d!" "m!"]
                                             ["d!" ":router/change" ["{}" [":name" ":members"]]]]},
                        :procs []},
         "comp.page-members" {:ns ["ns"
                                   "app.comp.page-members"
                                   [":require-macros"
                                    ["[]" "respo.macros" ":refer" ["[]" "defcomp" "<>" "span" "div" "a"]]]
                                   [":require"
                                    ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                                    ["[]" "respo-ui.style" ":as" "ui"]
                                    ["[]" "respo-ui.style.colors" ":as" "colors"]
                                    ["[]" "respo.core" ":refer" ["[]" "create-comp"]]
                                    ["[]" "respo.comp.space" ":refer" ["[]" "=<"]]]],
                              :defs {"comp-page-members" ["defcomp"
                                                          "comp-page-members"
                                                          []
                                                          ["div"
                                                           ["{}" [":style" "ui/flex"]]
                                                           ["<>" "span" "|Members" "nil"]]]},
                              :procs []},
         "comp.expr" {:ns ["ns"
                           "app.comp.expr"
                           [":require-macros"
                            ["[]" "respo.macros" ":refer" ["[]" "defcomp" "cursor->" "<>" "span" "div" "a"]]]
                           [":require"
                            ["[]" "hsl.core" ":refer" ["[]" "hsl"]]
                            ["[]" "respo-ui.style" ":as" "ui"]
                            ["[]" "respo-ui.style.colors" ":as" "colors"]
                            ["[]" "respo.core" ":refer" ["[]" "create-comp"]]
                            ["[]" "respo.comp.space" ":refer" ["[]" "=<"]]
                            ["[]" "app.util.keycode" ":as" "keycode"]
                            ["[]" "app.comp.leaf" ":refer" ["[]" "comp-leaf"]]
                            ["[]" "app.util" ":refer" ["[]" "coord-contains?" "simple?"]]]],
                      :defs {"comp-expr" ["defcomp"
                                          "comp-expr"
                                          ["states" "expr" "focus" "coord" "others" "tail?"]
                                          ["let"
                                           [["focused?" ["=" "focus" "coord"]]
                                            ["first-id" ["apply" "min" ["keys" [":data" "expr"]]]]
                                            ["last-id" ["apply" "max" ["keys" [":data" "expr"]]]]]
                                           ["div"
                                            ["{}"
                                             [":tab-index" "0"]
                                             [":class-name" ["if" "focused?" "|cirru-focused" "nil"]]
                                             [":style"
                                              ["merge"
                                               "style-expr"
                                               ["if"
                                                ["contains?" "others" "coord"]
                                                ["{}" [":border-color" ["hsl" "0" "0" "100" "0.6"]]]]
                                               ["if" "focused?" ["{}" [":border-color" ["hsl" "0" "0" "100" "0.9"]]]]
                                               ["if" ["and" ["simple?" "expr"] ["not" "tail?"]] "style-simple"]]]
                                             [":on"
                                              ["{}" [":keydown" ["on-keydown" "coord"]] [":click" ["on-focus" "coord"]]]]]
                                            ["->>"
                                             [":data" "expr"]
                                             ["sort-by" "first"]
                                             ["map"
                                              ["fn"
                                               ["entry"]
                                               ["let"
                                                [[["[]" "k" "child"] "entry"]
                                                 ["child-coord" ["conj" "coord" "k"]]
                                                 ["partial-others"
                                                  ["->>"
                                                   "others"
                                                   ["filter" ["fn" ["x"] ["coord-contains?" "x" "child-coord"]]]
                                                   ["into" ["#{}"]]]]]
                                                ["[]"
                                                 "k"
                                                 ["if"
                                                  ["=" ":leaf" [":type" "child"]]
                                                  ["cursor->"
                                                   "k"
                                                   "comp-leaf"
                                                   "states"
                                                   "child"
                                                   "focus"
                                                   "child-coord"
                                                   ["contains?" "partial-others" "child-coord"]
                                                   ["=" "first-id" "k"]]
                                                  ["cursor->"
                                                   "k"
                                                   "comp-expr"
                                                   "states"
                                                   "child"
                                                   "focus"
                                                   "child-coord"
                                                   "partial-others"
                                                   ["=" "last-id" "k"]]]]]]]]]]],
                             "style-expr" ["def"
                                           "style-expr"
                                           ["{}"
                                            [":border-width" "|0 0 0 1px"]
                                            [":border-style" ":solid"]
                                            [":border-color" ["hsl" "0" "0" "100" "0.3"]]
                                            [":min-height" "24"]
                                            [":outline" ":none"]
                                            [":padding-left" "4"]
                                            [":margin-left" "16"]
                                            [":font-family" "|Menlo,monospce"]
                                            [":font-size" "14"]
                                            [":margin" "2"]]],
                             "on-keydown" ["defn"
                                           "on-keydown"
                                           ["coord"]
                                           ["fn"
                                            ["e" "d!" "m!"]
                                            ["let"
                                             [["event" [":original-event" "e"]]
                                              ["shift?" [".-shiftKey" "event"]]
                                              ["meta?" [".-metaKey" "event"]]
                                              ["ctrl?" [".-ctrlKey" "event"]]
                                              ["code" [":key-code" "e"]]]
                                             ["cond"
                                              [["=" "code" "keycode/enter"] ["d!" ":ir/append-leaf" "nil"]]
                                              [["=" "code" "keycode/delete"] ["d!" ":ir/delete-node" "nil"]]
                                              [["=" "code" "keycode/space"]
                                               ["d!" ["if" "shift?" ":ir/leaf-before" ":ir/leaf-after"] "nil"]]
                                              [["=" "code" "keycode/tab"]
                                               ["do"
                                                ["d!" ["if" "shift?" ":ir/unindent" ":ir/indent"] "nil"]
                                                [".preventDefault" "event"]]]
                                              [["=" "code" "keycode/up"]
                                               ["do"
                                                ["if" ["not" ["empty?" "coord"]] ["d!" ":writer/go-up" "nil"]]
                                                [".preventDefault" "event"]]]
                                              [["=" "code" "keycode/down"]
                                               ["do" ["d!" ":writer/go-down" "nil"] [".preventDefault" "event"]]]
                                              [["=" "code" "keycode/left"]
                                               ["do" ["d!" ":writer/go-left" "nil"] [".preventDefault" "event"]]]
                                              [["=" "code" "keycode/right"]
                                               ["do" ["d!" ":writer/go-right" "nil"] [".preventDefault" "event"]]]
                                              [":else" ["println" "|Keydown" [":key-code" "e"]]]]]]],
                             "on-focus" ["defn"
                                         "on-focus"
                                         ["coord"]
                                         ["fn" ["e" "d!" "m!"] ["d!" ":writer/focus" "coord"]]],
                             "style-simple" ["def"
                                             "style-simple"
                                             ["{}"
                                              [":display" ":inline-block"]
                                              [":border-width" "|0 0 1px 0"]
                                              [":min-width" "32"]
                                              [":padding" "|0 8px"]]]},
                      :procs []}}}
