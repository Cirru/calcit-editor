{:package "server",
 :root nil,
 :files {"updater.router" {:ns ["ns" "server.updater.router"],
                           :defs {"change" ["defn"
                                            "change"
                                            ["db" "op-data" "session-id" "op-id" "op-time"]
                                            ["assoc-in" "db" ["[]" ":sessions" "session-id" ":router"] "op-data"]]},
                           :procs []},
         "twig.container" {:ns ["ns"
                                "server.twig.container"
                                [":require"
                                 ["[]" "recollect.bunch" ":refer" ["[]" "create-twig"]]
                                 ["[]" "server.twig.user" ":refer" ["[]" "twig-user"]]
                                 ["[]" "server.twig.page-files" ":refer" ["[]" "twig-page-files"]]
                                 ["[]" "server.twig.page-editor" ":refer" ["[]" "twig-page-editor"]]
                                 ["[]" "server.twig.page-members" ":refer" ["[]" "twig-page-members"]]
                                 ["[]" "server.twig.search" ":refer" ["[]" "twig-search"]]]],
                           :defs {"twig-container" ["def"
                                                    "twig-container"
                                                    ["create-twig"
                                                     ":container"
                                                     ["fn"
                                                      ["db" "session"]
                                                      ["let"
                                                       [["logged-in?" ["some?" [":user-id" "session"]]]
                                                        ["router" [":router" "session"]]
                                                        ["writer" [":writer" "session"]]
                                                        ["ir" [":ir" "db"]]]
                                                       ["if"
                                                        "logged-in?"
                                                        ["{}"
                                                         [":session" ["dissoc" "session" ":router"]]
                                                         [":logged-in?" "true"]
                                                         [":user"
                                                          ["twig-user"
                                                           ["get-in" "db" ["[]" ":users" [":user-id" "session"]]]]]
                                                         [":router"
                                                          ["assoc"
                                                           "router"
                                                           ":data"
                                                           ["case"
                                                            [":name" "router"]
                                                            [":files"
                                                             ["twig-page-files"
                                                              [":files" "ir"]
                                                              ["get-in" "session" ["[]" ":writer" ":selected-ns"]]
                                                              [":saved-files" "db"]]]
                                                            [":editor"
                                                             ["twig-page-editor"
                                                              [":files" "ir"]
                                                              [":sessions" "db"]
                                                              "writer"
                                                              [":id" "session"]]]
                                                            [":members"
                                                             ["twig-page-members" [":sessions" "db"] [":users" "db"]]]
                                                            [":search" ["twig-search" [":files" "ir"]]]
                                                            "nil"]]]]
                                                        ["{}" [":session" "session"] [":logged-in?" "false"]]]]]]]},
                           :procs []},
         "util.compile" {:ns ["ns"
                              "server.util.compile"
                              [":require"
                               ["[]" "clojure.set" ":refer" ["[]" "difference" "intersection"]]
                               ["[]" "stack-server.analyze" ":refer" ["[]" "generate-file"]]
                               ["[]" "server.util" ":refer" ["[]" "ns->path" "file->cirru"]]
                               ["[]" "server.schema" ":as" "schema"]]],
                         :defs {"emit-file!" ["defn" "emit-file!" []],
                                "handle-files!" ["defn"
                                                 "handle-files!"
                                                 ["db" "dispatch!"]
                                                 ["try"
                                                  ["let"
                                                   [["new-files" ["get-in" "db" ["[]" ":ir" ":files"]]]
                                                    ["old-files" ["get" "db" ":saved-files"]]
                                                    ["new-names" ["set" ["keys" "new-files"]]]
                                                    ["old-names" ["set" ["keys" "old-files"]]]
                                                    ["added-names" ["difference" "new-names" "old-names"]]
                                                    ["removed-names" ["difference" "old-names" "new-names"]]
                                                    ["changed-names"
                                                     ["->>"
                                                      ["intersection" "new-names" "old-names"]
                                                      ["filter"
                                                       ["fn"
                                                        ["ns-text"]
                                                        ["not="
                                                         ["get" "new-files" "ns-text"]
                                                         ["get" "old-files" "ns-text"]]]]]]]
                                                   ["doseq"
                                                    ["[]" "ns-text" "added-names"]
                                                    ["create-file!"
                                                     ["ns->path" "ns-text"]
                                                     ["get" "new-files" "ns-text"]]]
                                                   ["doseq"
                                                    ["[]" "ns-text" "removed-names"]
                                                    ["remove-file!" ["ns->path" "ns-text"]]]
                                                   ["doseq"
                                                    ["[]" "ns-text" "changed-names"]
                                                    ["modify-file!"
                                                     ["ns->path" "ns-text"]
                                                     ["get" "new-files" "ns-text"]]]
                                                   ["dispatch!" ":writer/save-files" "nil"]]
                                                  ["catch"
                                                   "js/Error"
                                                   "e"
                                                   ["do"
                                                    [".log" "js/console" "e"]
                                                    ["dispatch!" ":notify/push-error" [".-message" "e"]]]]]],
                                "create-file!" ["defn"
                                                "create-file!"
                                                ["file-path" "file"]
                                                ["let"
                                                 [["project-path"
                                                   ["path.join" [":output" "schema/configs"] "file-path"]]]
                                                 ["println" "|Creating" "project-path"]
                                                 ["cp.execSync" ["str" "|mkdir -p " ["path.dirname" "project-path"]]]
                                                 ["fs.writeFileSync"
                                                  "project-path"
                                                  ["generate-file" ["file->cirru" "file"]]]]],
                                "remove-file!" ["defn"
                                                "remove-file!"
                                                ["file-path"]
                                                ["let"
                                                 [["project-path"
                                                   ["path.join" [":output" "schema/configs"] "file-path"]]]
                                                 ["println" "|Removing" "project-path"]
                                                 ["cp.execSync" ["str" "|rm -rfv " "project-path"]]]],
                                "modify-file!" ["defn"
                                                "modify-file!"
                                                ["file-path" "file"]
                                                ["let"
                                                 [["project-path"
                                                   ["path.join" [":output" "schema/configs"] "file-path"]]]
                                                 ["println" "|Modifying" "project-path"]
                                                 ["fs.writeFileSync"
                                                  "project-path"
                                                  ["generate-file" ["file->cirru" "file"]]]]],
                                "fs" ["def" "fs" ["js/require" "|fs"]],
                                "path" ["def" "path" ["js/require" "|path"]],
                                "cp" ["def" "cp" ["js/require" "|child_process"]]},
                         :procs []},
         "updater.writer" {:ns ["ns"
                                "server.updater.writer"
                                [":require"
                                 ["[]" "server.util" ":refer" ["[]" "bookmark->path" "to-writer" "to-bookmark"]]
                                 ["[]" "server.util.stack" ":refer" ["[]" "push-bookmark"]]
                                 ["[]" "server.schema" ":as" "schema"]]],
                           :defs {"collapse" ["defn"
                                              "collapse"
                                              ["db" "op-data" "session-id" "op-id" "op-time"]
                                              ["->"
                                               "db"
                                               ["update-in"
                                                ["[]" ":sessions" "session-id" ":writer"]
                                                ["fn"
                                                 ["writer"]
                                                 ["->"
                                                  "writer"
                                                  ["update" ":stack" ["fn" ["stack"] ["subvec" "stack" "op-data"]]]
                                                  ["assoc" ":pointer" "0"]]]]]],
                                  "go-up" ["defn"
                                           "go-up"
                                           ["db" "op-data" "session-id" "op-id" "op-time"]
                                           ["->"
                                            "db"
                                            ["update-in"
                                             ["[]" ":sessions" "session-id" ":writer"]
                                             ["fn"
                                              ["writer"]
                                              ["update-in"
                                               "writer"
                                               ["[]" ":stack" [":pointer" "writer"] ":focus"]
                                               ["fn"
                                                ["focus"]
                                                ["if" ["empty?" "focus"] "focus" ["vec" ["butlast" "focus"]]]]]]]]],
                                  "move-next" ["defn"
                                               "move-next"
                                               ["db" "op-data" "sid" "op-id" "op-time"]
                                               ["->"
                                                "db"
                                                ["update-in"
                                                 ["[]" ":sessions" "sid" ":writer"]
                                                 ["fn"
                                                  ["writer"]
                                                  ["let"
                                                   [["pointer" [":pointer" "writer"]]]
                                                   ["assoc"
                                                    "writer"
                                                    ":pointer"
                                                    ["if"
                                                     [">=" "pointer" ["dec" ["count" [":stack" "writer"]]]]
                                                     "pointer"
                                                     ["inc" "pointer"]]]]]]]],
                                  "remove-idx" ["defn"
                                                "remove-idx"
                                                ["db" "op-data" "session-id" "op-id" "op-time"]
                                                ["->"
                                                 "db"
                                                 ["update-in"
                                                  ["[]" ":sessions" "session-id" ":writer"]
                                                  ["fn"
                                                   ["writer"]
                                                   ["->"
                                                    "writer"
                                                    ["update"
                                                     ":stack"
                                                     ["fn"
                                                      ["stack"]
                                                      ["vec"
                                                       ["concat"
                                                        ["take" "op-data" "stack"]
                                                        ["drop" ["inc" "op-data"] "stack"]]]]]
                                                    ["update"
                                                     ":pointer"
                                                     ["fn"
                                                      ["pointer"]
                                                      ["if" ["pos?" "pointer"] ["dec" "pointer"] "pointer"]]]]]]]],
                                  "copy" ["defn"
                                          "copy"
                                          ["db" "op-data" "session-id" "op-id" "op-time"]
                                          ["let"
                                           [["writer" ["to-writer" "db" "session-id"]]
                                            ["bookmark" ["to-bookmark" "writer"]]
                                            ["data-path" ["bookmark->path" "bookmark"]]]
                                           ["->"
                                            "db"
                                            ["assoc-in"
                                             ["[]" ":sessions" "session-id" ":writer" ":clipboard"]
                                             ["get-in" "db" "data-path"]]]]],
                                  "move-previous" ["defn"
                                                   "move-previous"
                                                   ["db" "op-data" "sid" "op-id" "op-time"]
                                                   ["->"
                                                    "db"
                                                    ["update-in"
                                                     ["[]" ":sessions" "sid" ":writer"]
                                                     ["fn"
                                                      ["writer"]
                                                      ["let"
                                                       [["pointer" [":pointer" "writer"]]]
                                                       ["assoc"
                                                        "writer"
                                                        ":pointer"
                                                        ["if" ["pos?" "pointer"] ["dec" "pointer"] "0"]]]]]]],
                                  "paste" ["defn"
                                           "paste"
                                           ["db" "op-data" "session-id" "op-id" "op-time"]
                                           ["let"
                                            [["piece"
                                              ["get-in" "db" ["[]" ":sessions" "session-id" ":writer" ":clipboard"]]]
                                             ["writer" ["to-writer" "db" "session-id"]]
                                             ["bookmark" ["to-bookmark" "writer"]]
                                             ["data-path" ["bookmark->path" "bookmark"]]]
                                            ["if" ["some?" "piece"] ["->" "db" ["assoc-in" "data-path" "piece"]] "db"]]],
                                  "focus" ["defn"
                                           "focus"
                                           ["db" "op-data" "session-id" "op-id" "op-time"]
                                           ["let"
                                            [["writer" ["get-in" "db" ["[]" ":sessions" "session-id" ":writer"]]]]
                                            ["assoc-in"
                                             "db"
                                             ["[]"
                                              ":sessions"
                                              "session-id"
                                              ":writer"
                                              ":stack"
                                              [":pointer" "writer"]
                                              ":focus"]
                                             "op-data"]]],
                                  "go-down" ["defn"
                                             "go-down"
                                             ["db" "op-data" "session-id" "op-id" "op-time"]
                                             ["let"
                                              [["writer" ["get-in" "db" ["[]" ":sessions" "session-id" ":writer"]]]
                                               ["bookmark" ["get" [":stack" "writer"] [":pointer" "writer"]]]
                                               ["target-expr" ["get-in" "db" ["bookmark->path" "bookmark"]]]]
                                              ["if"
                                               ["zero?" ["count" [":data" "target-expr"]]]
                                               "db"
                                               ["->"
                                                "db"
                                                ["update-in"
                                                 ["[]"
                                                  ":sessions"
                                                  "session-id"
                                                  ":writer"
                                                  ":stack"
                                                  [":pointer" "writer"]
                                                  ":focus"]
                                                 ["fn"
                                                  ["focus"]
                                                  ["conj" "focus" ["apply" "min" ["keys" [":data" "target-expr"]]]]]]]]]],
                                  "edit" ["defn"
                                          "edit"
                                          ["db" "op-data" "session-id" "op-id" "op-time"]
                                          ["let"
                                           [["ns-text"
                                             ["get-in" "db" ["[]" ":sessions" "session-id" ":writer" ":selected-ns"]]]
                                            ["bookmark" ["assoc" "op-data" ":ns" "ns-text" ":focus" ["[]"]]]]
                                           ["->"
                                            "db"
                                            ["update-in"
                                             ["[]" ":sessions" "session-id" ":writer"]
                                             ["push-bookmark" "bookmark"]]
                                            ["assoc-in"
                                             ["[]" ":sessions" "session-id" ":router"]
                                             ["{}" [":name" ":editor"]]]]]],
                                  "select" ["defn"
                                            "select"
                                            ["db" "op-data" "session-id" "op-id" "op-time"]
                                            ["let"
                                             [["bookmark" "op-data"]]
                                             ["->"
                                              "db"
                                              ["update-in"
                                               ["[]" ":sessions" "session-id" ":writer"]
                                               ["push-bookmark" "bookmark"]]
                                              ["assoc-in"
                                               ["[]" ":sessions" "session-id" ":router"]
                                               ["{}" [":name" ":editor"]]]]]],
                                  "go-right" ["defn"
                                              "go-right"
                                              ["db" "op-data" "session-id" "op-id" "op-time"]
                                              ["let"
                                               [["writer" ["get-in" "db" ["[]" ":sessions" "session-id" ":writer"]]]
                                                ["bookmark" ["get" [":stack" "writer"] [":pointer" "writer"]]]
                                                ["parent-bookmark" ["update" "bookmark" ":focus" "butlast"]]
                                                ["parent-path" ["bookmark->path" "parent-bookmark"]]
                                                ["last-coord" ["last" [":focus" "bookmark"]]]
                                                ["base-expr" ["get-in" "db" "parent-path"]]
                                                ["child-keys" ["vec" ["sort" ["keys" [":data" "base-expr"]]]]]
                                                ["idx" [".indexOf" "child-keys" "last-coord"]]]
                                               ["if"
                                                ["empty?" [":focus" "bookmark"]]
                                                "db"
                                                ["->"
                                                 "db"
                                                 ["update-in"
                                                  ["[]"
                                                   ":sessions"
                                                   "session-id"
                                                   ":writer"
                                                   ":stack"
                                                   [":pointer" "writer"]
                                                   ":focus"]
                                                  ["fn"
                                                   ["focus"]
                                                   ["conj"
                                                    ["vec" ["butlast" "focus"]]
                                                    ["if"
                                                     ["=" "idx" ["dec" ["count" "child-keys"]]]
                                                     "last-coord"
                                                     ["get" "child-keys" ["inc" "idx"]]]]]]]]]],
                                  "edit-ns" ["defn"
                                             "edit-ns"
                                             ["db" "op-data" "sid" "op-id" "op-time"]
                                             ["let"
                                              [["writer" ["to-writer" "db" "sid"]]
                                               ["bookmark" ["to-bookmark" "writer"]]
                                               ["ns-text" [":ns" "bookmark"]]]
                                              ["if"
                                               ["contains?" ["#{}" ":def" ":proc"] [":kind" "bookmark"]]
                                               ["->"
                                                "db"
                                                ["update-in"
                                                 ["[]" ":sessions" "sid" ":writer"]
                                                 ["push-bookmark"
                                                  ["assoc" "schema/bookmark" ":kind" ":ns" ":ns" "ns-text"]]]]
                                               "db"]]],
                                  "cut" ["defn"
                                         "cut"
                                         ["db" "op-data" "session-id" "op-id" "op-time"]
                                         ["let"
                                          [["writer" ["to-writer" "db" "session-id"]]
                                           ["bookmark" ["to-bookmark" "writer"]]
                                           ["data-path" ["bookmark->path" "bookmark"]]
                                           ["last-coord" ["last" [":focus" "bookmark"]]]
                                           ["parent-path" ["bookmark->path" ["update" "bookmark" ":focus" "butlast"]]]]
                                          ["->"
                                           "db"
                                           ["assoc-in"
                                            ["[]" ":sessions" "session-id" ":writer" ":clipboard"]
                                            ["get-in" "db" "data-path"]]
                                           ["update-in"
                                            "parent-path"
                                            ["fn"
                                             ["expr"]
                                             ["update" "expr" ":data" ["fn" ["data"] ["dissoc" "data" "last-coord"]]]]]]]],
                                  "point-to" ["defn"
                                              "point-to"
                                              ["db" "op-data" "session-id" "op-id" "op-time"]
                                              ["assoc-in"
                                               "db"
                                               ["[]" ":sessions" "session-id" ":writer" ":pointer"]
                                               "op-data"]],
                                  "save-files" ["defn"
                                                "save-files"
                                                ["db" "op-data" "session-id" "op-id" "op-time"]
                                                ["assoc" "db" ":saved-files" ["get-in" "db" ["[]" ":ir" ":files"]]]],
                                  "go-left" ["defn"
                                             "go-left"
                                             ["db" "op-data" "session-id" "op-id" "op-time"]
                                             ["let"
                                              [["writer" ["get-in" "db" ["[]" ":sessions" "session-id" ":writer"]]]
                                               ["bookmark" ["get" [":stack" "writer"] [":pointer" "writer"]]]
                                               ["parent-bookmark" ["update" "bookmark" ":focus" "butlast"]]
                                               ["parent-path" ["bookmark->path" "parent-bookmark"]]
                                               ["last-coord" ["last" [":focus" "bookmark"]]]
                                               ["base-expr" ["get-in" "db" "parent-path"]]
                                               ["child-keys" ["vec" ["sort" ["keys" [":data" "base-expr"]]]]]
                                               ["idx" [".indexOf" "child-keys" "last-coord"]]]
                                              ["if"
                                               ["empty?" [":focus" "bookmark"]]
                                               "db"
                                               ["->"
                                                "db"
                                                ["update-in"
                                                 ["[]"
                                                  ":sessions"
                                                  "session-id"
                                                  ":writer"
                                                  ":stack"
                                                  [":pointer" "writer"]
                                                  ":focus"]
                                                 ["fn"
                                                  ["focus"]
                                                  ["conj"
                                                   ["vec" ["butlast" "focus"]]
                                                   ["if"
                                                    ["zero?" "idx"]
                                                    "last-coord"
                                                    ["get" "child-keys" ["dec" "idx"]]]]]]]]]]},
                           :procs []},
         "util" {:ns ["ns"
                      "server.util"
                      [":require"
                       ["[]" "clojure.string" ":as" "string"]
                       ["[]" "server.schema" ":as" "schema"]
                       ["[]" "bisection-key.core" ":as" "bisection"]]],
                 :defs {"pick-second-key" ["defn" "pick-second-key" ["m"] ["first" ["rest" ["sort" ["keys" "m"]]]]],
                        "prepend-data" ["defn" "prepend-data" ["x"] ["[]" ":data" "x"]],
                        "expr?" ["defn" "expr?" ["x"] ["=" ":expr" [":type" "x"]]],
                        "to-bookmark" ["defn"
                                       "to-bookmark"
                                       ["writer"]
                                       ["get" [":stack" "writer"] [":pointer" "writer"]]],
                        "tree->cirru" ["defn"
                                       "tree->cirru"
                                       ["x"]
                                       ["if"
                                        ["=" ":leaf" [":type" "x"]]
                                        [":text" "x"]
                                        ["->>"
                                         [":data" "x"]
                                         ["sort-by" "first"]
                                         ["map" ["fn" ["entry"] ["tree->cirru" ["val" "entry"]]]]
                                         ["vec"]]]],
                        "cirru->tree" ["defn"
                                       "cirru->tree"
                                       ["xs" "author" "timestamp"]
                                       ["if"
                                        ["vector?" "xs"]
                                        ["merge"
                                         "schema/expr"
                                         ["{}"
                                          [":time" "timestamp"]
                                          [":author" "author"]
                                          [":data"
                                           ["loop"
                                            ["[]" "result" ["{}"] "ys" "xs" "next-id" "bisection/mid-id"]
                                            ["if"
                                             ["empty?" "ys"]
                                             "result"
                                             ["let"
                                              [["y" ["first" "ys"]]]
                                              ["recur"
                                               ["assoc" "result" "next-id" ["cirru->tree" "y" "author" "timestamp"]]
                                               ["rest" "ys"]
                                               ["bisection/bisect" "next-id" "bisection/max-id"]]]]]]]]
                                        ["merge"
                                         "schema/leaf"
                                         ["{}" [":time" "timestamp"] [":author" "author"] [":text" "xs"]]]]],
                        "kinds" ["def" "kinds" ["#{}" ":ns" ":def" ":proc"]],
                        "leaf?" ["defn" "leaf?" ["x"] ["=" ":leaf" [":type" "x"]]],
                        "ns->path" ["defn"
                                    "ns->path"
                                    ["ns-text"]
                                    ["->"
                                     "ns-text"
                                     ["string/replace" "|." "|/"]
                                     ["string/replace" "|-" "|_"]
                                     ["str" [":extension" "schema/configs"]]]],
                        "same-buffer?" ["defn"
                                        "same-buffer?"
                                        ["x" "y"]
                                        ["and"
                                         ["=" [":kind" "x"] [":kind" "y"]]
                                         ["=" [":ns" "x"] [":ns" "y"]]
                                         ["=" [":extra" "x"] [":extra" "y"]]]],
                        "to-keys" ["defn" "to-keys" ["target-expr"] ["vec" ["sort" ["keys" [":data" "target-expr"]]]]],
                        "to-writer" ["defn"
                                     "to-writer"
                                     ["db" "session-id"]
                                     ["get-in" "db" ["[]" ":sessions" "session-id" ":writer"]]],
                        "bookmark->path" ["defn"
                                          "bookmark->path"
                                          ["bookmark"]
                                          ["assert" ["map?" "bookmark"] "|Bookmark should be data"]
                                          ["assert" ["contains?" "kinds" [":kind" "bookmark"]] "|invalid bookmark type"]
                                          ["if"
                                           ["=" ":def" [":kind" "bookmark"]]
                                           ["concat"
                                            ["[]" ":ir" ":files" [":ns" "bookmark"] ":defs" [":extra" "bookmark"]]
                                            ["mapcat" "prepend-data" [":focus" "bookmark"]]]
                                           ["concat"
                                            ["[]" ":ir" ":files" [":ns" "bookmark"] [":kind" "bookmark"]]
                                            ["mapcat" "prepend-data" [":focus" "bookmark"]]]]],
                        "file->cirru" ["defn"
                                       "file->cirru"
                                       ["file"]
                                       ["->"
                                        "file"
                                        ["update" ":ns" "tree->cirru"]
                                        ["update" ":proc" "tree->cirru"]
                                        ["update"
                                         ":defs"
                                         ["fn"
                                          ["defs"]
                                          ["->>"
                                           "defs"
                                           ["map"
                                            ["fn"
                                             ["entry"]
                                             ["let" [[["[]" "k" "xs"] "entry"]] ["[]" "k" ["tree->cirru" "xs"]]]]]
                                           ["into" ["{}"]]]]]]],
                        "find-first" ["defn"
                                      "find-first"
                                      ["f" "xs"]
                                      ["reduce" ["fn" ["_" "x"] ["when" ["f" "x"] ["reduced" "x"]]] "nil" "xs"]]},
                 :procs []},
         "schema" {:ns ["ns" "server.schema"],
                   :defs {"ir-file" ["def" "ir-file" ["{}" [":pkg" "|app"] [":files" ["{}"]]]],
                          "expr" ["def"
                                  "expr"
                                  ["{}" [":type" ":expr"] [":author" "nil"] [":time" "nil"] [":data" ["{}"]]]],
                          "configs" ["def"
                                     "configs"
                                     ["{}"
                                      [":storage-key" "|coir.edn"]
                                      [":extension" "|.cljs"]
                                      [":output" "|src"]
                                      [":port" ["or" [".-port" "js/process.env"] "6001"]]]],
                          "user" ["def"
                                  "user"
                                  ["{}"
                                   [":name" "nil"]
                                   [":id" "nil"]
                                   [":nickname" "nil"]
                                   [":avatar" "nil"]
                                   [":password" "nil"]]],
                          "bookmark" ["def"
                                      "bookmark"
                                      ["{}" [":kind" ":def"] [":ns" "nil"] [":extra" "nil"] [":focus" ["[]"]]]],
                          "leaf" ["def" "leaf" ["{}" [":type" ":leaf"] [":author" "nil"] [":time" "nil"] [":text" "|"]]],
                          "database" ["def"
                                      "database"
                                      ["{}"
                                       [":sessions" ["{}"]]
                                       [":users" ["{}"]]
                                       [":ir" "ir-file"]
                                       [":saved-files" ["{}"]]]],
                          "router" ["def"
                                    "router"
                                    ["{}" [":name" "nil"] [":title" "nil"] [":data" ["{}"]] [":router" "nil"]]],
                          "file" ["def" "file" ["{}" [":ns" ["{}"]] [":defs" ["{}"]] [":proc" ["{}"]]]],
                          "session" ["def"
                                     "session"
                                     ["{}"
                                      [":user-id" "nil"]
                                      [":id" "nil"]
                                      [":nickname" "nil"]
                                      [":router" ["{}" [":name" ":files"] [":data" "nil"] [":router" "nil"]]]
                                      [":notifications" ["[]"]]
                                      [":writer"
                                       ["{}"
                                        [":selected-ns" "nil"]
                                        [":pointer" "0"]
                                        [":stack" ["[]"]]
                                        [":clipboard" "nil"]]]]],
                          "notification" ["def" "notification" ["{}" [":id" "nil"] [":kind" "nil"] [":text" "nil"]]],
                          "page-data" ["def"
                                       "page-data"
                                       ["{}"
                                        [":files"
                                         ["{}" [":ns-set" ["#{}"]] [":defs-set" ["#{}"]] [":changed-files" ["{}"]]]]
                                        [":editor" ["{}" [":focus" ["[]"]] [":others" ["#{}"]] [":expr" "nil"]]]]]},
                   :procs []},
         "twig.member" {:ns ["ns"
                             "server.twig.member"
                             [":require" ["[]" "recollect.bunch" ":refer" ["[]" "create-twig"]]]],
                        :defs {"twig-member" ["def"
                                              "twig-member"
                                              ["create-twig"
                                               ":member"
                                               ["fn"
                                                ["session" "user"]
                                                ["{}"
                                                 [":user" "user"]
                                                 [":nickname" [":nickname" "session"]]
                                                 [":bookmark"
                                                  ["let"
                                                   [["writer" [":writer" "session"]]]
                                                   ["get" [":stack" "writer"] [":pointer" "writer"]]]]
                                                 [":page" ["get-in" "session" ["[]" ":router" ":name"]]]]]]]},
                        :procs []},
         "twig.search" {:ns ["ns"
                             "server.twig.search"
                             [":require" ["[]" "recollect.bunch" ":refer" ["[]" "create-twig"]]]],
                        :defs {"twig-search" ["def"
                                              "twig-search"
                                              ["create-twig"
                                               ":search"
                                               ["fn"
                                                ["files"]
                                                ["->>"
                                                 "files"
                                                 ["mapcat"
                                                  ["fn"
                                                   ["entry"]
                                                   ["let"
                                                    [[["[]" "k" "file"] "entry"]]
                                                    ["concat"
                                                     ["[]"
                                                      ["{}" [":kind" ":ns"] [":ns" "k"]]
                                                      ["{}" [":kind" ":proc"] [":ns" "k"]]]
                                                     ["map"
                                                      ["fn"
                                                       ["f-entry"]
                                                       ["let"
                                                        [[["[]" "f-k" "file"] "f-entry"]]
                                                        ["{}" [":kind" ":def"] [":ns" "k"] [":extra" "f-k"]]]]
                                                      [":defs" "file"]]]]]]
                                                 ["set"]]]]]},
                        :procs []},
         "updater.notify" {:ns ["ns" "server.updater.notify"],
                           :defs {"push-error" ["defn"
                                                "push-error"
                                                ["db" "op-data" "session-id" "op-id" "op-time"]
                                                ["update-in"
                                                 "db"
                                                 ["[]" ":sessions" "session-id" ":notifications"]
                                                 ["fn"
                                                  ["notifications"]
                                                  ["conj"
                                                   "notifications"
                                                   ["{}" [":id" "op-id"] [":kind" ":irreversible"] [":text" "op-data"]]]]]]},
                           :procs []},
         "updater.user" {:ns ["ns" "server.updater.user" [":require" ["[]" "server.util" ":refer" ["[]" "find-first"]]]],
                         :defs {"sign-up" ["defn"
                                           "sign-up"
                                           ["db" "op-data" "session-id" "op-id" "op-time"]
                                           ["let"
                                            [[["[]" "username" "password"] "op-data"]
                                             ["maybe-user"
                                              ["find-first"
                                               ["fn" ["user"] ["=" "username" [":name" "user"]]]
                                               ["vals" [":users" "db"]]]]]
                                            ["if"
                                             ["some?" "maybe-user"]
                                             ["update-in"
                                              "db"
                                              ["[]" ":sessions" "session-id" ":notifications"]
                                              ["fn"
                                               ["notifications"]
                                               ["conj"
                                                "notifications"
                                                ["{}"
                                                 [":id" "op-id"]
                                                 [":kind" ":attentive"]
                                                 [":text" ["str" "|Name is token: " "username"]]]]]]
                                             ["->"
                                              "db"
                                              ["assoc-in" ["[]" ":sessions" "session-id" ":user-id"] "op-id"]
                                              ["assoc-in"
                                               ["[]" ":users" "op-id"]
                                               ["{}"
                                                [":id" "op-id"]
                                                [":name" "username"]
                                                [":nickname" "username"]
                                                [":password" "password"]
                                                [":avatar" "nil"]]]]]]],
                                "log-in" ["defn"
                                          "log-in"
                                          ["db" "op-data" "session-id" "op-id" "op-time"]
                                          ["let"
                                           [[["[]" "username" "password"] "op-data"]
                                            ["maybe-user"
                                             ["find-first"
                                              ["fn" ["user"] ["and" ["=" "username" [":name" "user"]]]]
                                              ["vals" [":users" "db"]]]]]
                                           ["update-in"
                                            "db"
                                            ["[]" ":sessions" "session-id"]
                                            ["fn"
                                             ["session"]
                                             ["if"
                                              ["some?" "maybe-user"]
                                              ["if"
                                               ["=" "password" [":password" "maybe-user"]]
                                               ["assoc" "session" ":user-id" [":id" "maybe-user"]]
                                               ["update"
                                                "session"
                                                ":notifications"
                                                ["fn"
                                                 ["notifications"]
                                                 ["conj"
                                                  "notifications"
                                                  ["{}"
                                                   [":id" "op-id"]
                                                   [":kind" ":attentive"]
                                                   [":text" ["str" "|Wrong password for " "username"]]]]]]]
                                              ["update"
                                               "session"
                                               ":notifications"
                                               ["fn"
                                                ["notifications"]
                                                ["conj"
                                                 "notifications"
                                                 ["{}"
                                                  [":id" "op-id"]
                                                  [":kind" ":attentive"]
                                                  [":text" ["str" "|No user named: " "username"]]]]]]]]]]],
                                "log-out" ["defn"
                                           "log-out"
                                           ["db" "op-data" "session-id" "op-id" "op-time"]
                                           ["assoc-in" "db" ["[]" ":sessions" "session-id" ":user-id"] "nil"]]},
                         :procs []},
         "updater.session" {:ns ["ns" "server.updater.session" [":require" ["[]" "server.schema" ":as" "schema"]]],
                            :defs {"connect" ["defn"
                                              "connect"
                                              ["db" "op-data" "session-id" "op-id" "op-time"]
                                              ["assoc-in"
                                               "db"
                                               ["[]" ":sessions" "session-id"]
                                               ["merge" "schema/session" ["{}" [":id" "session-id"]]]]],
                                   "disconnect" ["defn"
                                                 "disconnect"
                                                 ["db" "op-data" "session-id" "op-id" "op-time"]
                                                 ["update"
                                                  "db"
                                                  ":sessions"
                                                  ["fn" ["session"] ["dissoc" "session" "session-id"]]]],
                                   "remove-notification" ["defn"
                                                          "remove-notification"
                                                          ["db" "op-data" "session-id" "op-id" "op-time"]
                                                          ["update-in"
                                                           "db"
                                                           ["[]" ":sessions" "session-id" ":notifications"]
                                                           ["fn"
                                                            ["notifications"]
                                                            ["subvec" "notifications" "0" "op-data"]]]],
                                   "select-ns" ["defn"
                                                "select-ns"
                                                ["db" "op-data" "session-id" "op-id" "op-time"]
                                                ["assoc-in"
                                                 "db"
                                                 ["[]" ":sessions" "session-id" ":writer" ":selected-ns"]
                                                 "op-data"]]},
                            :procs []},
         "main" {:ns ["ns"
                      "server.main"
                      [":require"
                       ["[]" "server.schema" ":as" "schema"]
                       ["[]" "server.network" ":refer" ["[]" "run-server!" "render-clients!"]]
                       ["[]" "server.updater.core" ":refer" ["[]" "updater"]]
                       ["[]" "cljs.core.async" ":refer" ["[]" "<!" ">!"]]
                       ["[]" "cljs.reader" ":refer" ["[]" "read-string"]]
                       ["[]" "fipp.edn" ":as" "fipp"]
                       ["[]" "server.util.compile" ":refer" ["[]" "handle-files!"]]]
                      [":require-macros" ["[]" "cljs.core.async.macros" ":refer" ["[]" "go-loop" "go"]]]],
                 :defs {"persist!" ["defn"
                                    "persist!"
                                    []
                                    ["let"
                                     [["fs" ["js/require" "|fs"]]]
                                     ["fs.writeFileSync"
                                      [":storage-key" "schema/configs"]
                                      ["with-out-str"
                                       ["fipp/pprint"
                                        ["->"
                                         "@*writer-db"
                                         ["assoc" ":sessions" ["{}"]]
                                         ["assoc" ":saved-files" ["{}"]]]]]]]],
                        "reload!" ["defn" "reload!" [] ["println" "|Code updated."] ["render-clients!" "@*reader-db"]],
                        "main!" ["defn"
                                 "main!"
                                 []
                                 ["let"
                                  [["op" ["or" [".-op" "js/process.env"] "|server"]]]
                                  ["if" ["=" "op" "|compile"] ["compile-all-files!"] ["start-server!"]]]],
                        "*writer-db" ["defonce"
                                      "*writer-db"
                                      ["atom"
                                       ["let"
                                        [["fs" ["js/require" "|fs"]]
                                         ["filepath" [":storage-key" "schema/configs"]]
                                         ["db"
                                          ["if"
                                           ["fs.existsSync" "filepath"]
                                           ["do"
                                            ["println" "|Found storage."]
                                            ["read-string" ["fs.readFileSync" "filepath" "|utf8"]]]
                                           ["do" ["println" "|Found no storage."] "schema/database"]]]]
                                        ["assoc" "db" ":saved-files" ["get-in" "db" ["[]" ":ir" ":files"]]]]]],
                        "render-loop!" ["defn"
                                        "render-loop!"
                                        []
                                        ["if"
                                         ["not=" "@*reader-db" "@*writer-db"]
                                         ["do"
                                          ["reset!" "*reader-db" "@*writer-db"]
                                          ["--" "println" "|render loop"]
                                          ["render-clients!" "@*reader-db"]]]
                                        ["js/setTimeout" "render-loop!" "20"]],
                        "*reader-db" ["defonce" "*reader-db" ["atom" "@*writer-db"]],
                        "start-server!" ["defn"
                                         "start-server!"
                                         []
                                         ["println" "|Loading configs:" ["pr-str" "schema/configs"]]
                                         ["let"
                                          [["server-ch" ["run-server!" ["{}" [":port" [":port" "schema/configs"]]]]]]
                                          ["go-loop"
                                           ["[]"]
                                           ["let"
                                            [[["[]" "op" "op-data" "session-id" "op-id" "op-time"] ["<!" "server-ch"]]
                                             ["dispatch!"
                                              ["fn"
                                               ["op'" "op-data'"]
                                               ["go"
                                                [">!"
                                                 "server-ch"
                                                 ["[]" "op'" "op-data'" "session-id" "op-id" "op-time"]]]]]]
                                            [".log"
                                             "js/console"
                                             "|Action"
                                             ["str" "op"]
                                             ["clj->js" "op-data"]
                                             "session-id"
                                             "op-id"
                                             "op-time"]
                                            ["--" ".log" "js/console" "|Database:" ["clj->js" "@*writer-db"]]
                                            ["try"
                                             ["do"
                                              ["cond"
                                               [["=" "op" ":effect/save-files"]
                                                ["handle-files!" "@*writer-db" "dispatch!"]]
                                               [":else"
                                                ["let"
                                                 [["new-db"
                                                   ["updater"
                                                    "@*writer-db"
                                                    "op"
                                                    "op-data"
                                                    "session-id"
                                                    "op-id"
                                                    "op-time"]]]
                                                 ["reset!" "*writer-db" "new-db"]]]]]
                                             ["catch" "js/Error" "e" [".log" "js/console" "e"]]]
                                            ["recur"]]]
                                          ["render-loop!"]]
                                         ["add-watch" "*reader-db" ":log" ["fn" []]]
                                         [".on"
                                          "js/process"
                                          "|SIGINT"
                                          ["fn"
                                           ["code"]
                                           ["persist!"]
                                           ["println" "|Saving file on exit" "code"]
                                           [".exit" "js/process"]]]
                                         ["println" "|Server started."]],
                        "compile-all-files!" ["defn"
                                              "compile-all-files!"
                                              []
                                              ["handle-files!"
                                               ["assoc" "@*writer-db" ":saved-files" ["{}"]]
                                               ["fn" ["op" "op-data"] ["println" "|After compile:" "op" "op-data"]]]]},
                 :procs []},
         "network" {:ns ["ns"
                         "server.network"
                         [":require"
                          ["[]" "cljs.nodejs" ":as" "nodejs"]
                          ["[]" "cljs.reader" ":as" "reader"]
                          ["[]" "cljs.core.async" ":refer" ["[]" "chan" ">!"]]
                          ["[]" "server.twig.container" ":refer" ["[]" "twig-container"]]
                          ["[]" "recollect.diff" ":refer" ["[]" "diff-bunch"]]
                          ["[]" "recollect.bunch" ":refer" ["[]" "render-bunch"]]]
                         [":require-macros" ["[]" "cljs.core.async.macros" ":refer" ["[]" "go"]]]],
                    :defs {"socket-registry" ["defonce" "socket-registry" ["atom" ["{}"]]],
                           "run-server!" ["defn"
                                          "run-server!"
                                          ["configs"]
                                          ["let"
                                           [["wss" ["new" "WebSocketServer" ["js-obj" "|port" [":port" "configs"]]]]]
                                           [".on"
                                            "wss"
                                            "|connection"
                                            ["fn"
                                             ["socket"]
                                             ["let"
                                              [["session-id" [".generate" "shortid"]]]
                                              ["handle-message" ":session/connect" "nil" "session-id"]
                                              ["swap!" "socket-registry" "assoc" "session-id" "socket"]
                                              [".info" "js/console" "|New client."]
                                              [".on"
                                               "socket"
                                               "|message"
                                               ["fn"
                                                ["rawData"]
                                                ["let"
                                                 [["action" ["reader/read-string" "rawData"]]
                                                  [["[]" "op" "op-data"] "action"]]
                                                 ["handle-message" "op" "op-data" "session-id"]]]]
                                              [".on"
                                               "socket"
                                               "|close"
                                               ["fn"
                                                []
                                                [".warn" "js/console" "|Client closed!"]
                                                ["swap!" "socket-registry" "dissoc" "session-id"]
                                                ["handle-message" ":session/disconnect" "nil" "session-id"]]]]]]]
                                          "server-chan"],
                           "render-clients!" ["defn"
                                              "render-clients!"
                                              ["db"]
                                              ["doseq"
                                               ["[]" "session-entry" [":sessions" "db"]]
                                               ["let"
                                                [[["[]" "session-id" "session"] "session-entry"]
                                                 ["old-store" ["or" ["get" "@client-caches" "session-id"] "nil"]]
                                                 ["new-store"
                                                  ["render-bunch" ["twig-container" "db" "session"] "old-store"]]
                                                 ["*changes" ["atom" ["[]"]]]
                                                 ["collect!" ["fn" ["x"] ["swap!" "*changes" "conj" "x"]]]
                                                 ["socket" ["get" "@socket-registry" "session-id"]]]
                                                ["diff-bunch" "collect!" ["[]"] "old-store" "new-store"]
                                                [".info"
                                                 "js/console"
                                                 "|Changes for"
                                                 "session-id"
                                                 "|:"
                                                 ["clj->js" "@*changes"]]
                                                ["if"
                                                 ["and" ["not=" "*changes" ["[]"]] ["some?" "socket"]]
                                                 ["do"
                                                  [".send" "socket" ["pr-str" "@*changes"]]
                                                  ["swap!" "client-caches" "assoc" "session-id" "new-store"]]]]]],
                           "client-caches" ["defonce" "client-caches" ["atom" ["{}"]]],
                           "server-chan" ["defonce" "server-chan" ["chan"]],
                           "shortid" ["def" "shortid" ["js/require" "|shortid"]],
                           "WebSocketServer" ["def" "WebSocketServer" [".-Server" "ws"]],
                           "handle-message" ["defn"
                                             "handle-message"
                                             ["op" "op-data" "session-id"]
                                             ["let"
                                              [["op-id" [".generate" "shortid"]] ["op-time" [".valueOf" ["js/Date."]]]]
                                              ["go"
                                               [">!" "server-chan" ["[]" "op" "op-data" "session-id" "op-id" "op-time"]]]]],
                           "ws" ["def" "ws" ["js/require" "|uws"]]},
                    :procs []},
         "twig.page-files" {:ns ["ns"
                                 "server.twig.page-files"
                                 [":require"
                                  ["[]" "recollect.bunch" ":refer" ["[]" "create-twig"]]
                                  ["[]" "clojure.set" ":refer" ["[]" "union"]]]],
                            :defs {"twig-page-files" ["def"
                                                      "twig-page-files"
                                                      ["create-twig"
                                                       ":page-files"
                                                       ["fn"
                                                        ["files" "selected-ns" "saved-files"]
                                                        ["{}"
                                                         [":ns-set" ["into" ["#{}"] ["keys" "files"]]]
                                                         [":defs-set"
                                                          ["if"
                                                           ["some?" "selected-ns"]
                                                           ["do"
                                                            ["->>"
                                                             ["get-in" "files" ["[]" "selected-ns" ":defs"]]
                                                             ["keys"]
                                                             ["into" ["#{}"]]]]
                                                           ["#{}"]]]
                                                         [":changed-files"
                                                          ["render-changed-files" "files" "saved-files"]]]]]],
                                   "render-changed-files" ["defn"
                                                           "render-changed-files"
                                                           ["files" "saved-files"]
                                                           ["->>"
                                                            ["union" ["keys-set" "files"] ["keys-set" "saved-files"]]
                                                            ["filter"
                                                             ["fn"
                                                              ["ns-text"]
                                                              ["not"
                                                               ["identical?"
                                                                ["get" "files" "ns-text"]
                                                                ["get" "saved-files" "ns-text"]]]]]
                                                            ["map"
                                                             ["fn"
                                                              ["ns-text"]
                                                              ["let"
                                                               [["file" ["get" "files" "ns-text"]]
                                                                ["saved-file" ["get" "saved-files" "ns-text"]]]
                                                               ["[]"
                                                                "ns-text"
                                                                ["{}"
                                                                 [":ns"
                                                                  ["compare-entry" [":ns" "file"] [":ns" "saved-file"]]]
                                                                 [":proc"
                                                                  ["compare-entry"
                                                                   [":proc" "file"]
                                                                   [":proc" "saved-file"]]]
                                                                 [":defs"
                                                                  ["let"
                                                                   [["all-defs"
                                                                     ["union"
                                                                      ["keys-set" [":defs" "file"]]
                                                                      ["keys-set" [":defs" "saved-file"]]]]
                                                                    ["defs" [":defs" "file"]]
                                                                    ["saved-defs" [":defs" "saved-file"]]]
                                                                   ["->>"
                                                                    "all-defs"
                                                                    ["filter"
                                                                     ["fn"
                                                                      ["def-text"]
                                                                      ["not="
                                                                       ["get" "defs" "def-text"]
                                                                       ["get" "saved-defs" "def-text"]]]]
                                                                    ["map"
                                                                     ["fn"
                                                                      ["def-text"]
                                                                      ["[]"
                                                                       "def-text"
                                                                       ["compare-entry"
                                                                        ["get" "defs" "def-text"]
                                                                        ["get" "saved-defs" "def-text"]]]]]
                                                                    ["into" ["{}"]]]]]]]]]]
                                                            ["into" ["{}"]]]],
                                   "keys-set" ["defn" "keys-set" ["x"] ["set" ["keys" "x"]]],
                                   "compare-entry" ["defn"
                                                    "compare-entry"
                                                    ["new-x" "old-x"]
                                                    ["cond"
                                                     [["and" ["nil?" "old-x"] ["some?" "new-x"]] ":add"]
                                                     [["and" ["some?" "old-x"] ["nil?" "new-x"]] ":remove"]
                                                     [":else" ":changed"]]]},
                            :procs []},
         "twig.user" {:ns ["ns" "server.twig.user" [":require" ["[]" "recollect.bunch" ":refer" ["[]" "create-twig"]]]],
                      :defs {"twig-user" ["def"
                                          "twig-user"
                                          ["create-twig" ":user" ["fn" ["user"] ["dissoc" "user" ":password"]]]]},
                      :procs []},
         "updater.core" {:ns ["ns"
                              "server.updater.core"
                              [":require"
                               ["[]" "server.updater.session" ":as" "session"]
                               ["[]" "server.updater.user" ":as" "user"]
                               ["[]" "server.updater.router" ":as" "router"]
                               ["[]" "server.updater.ir" ":as" "ir"]
                               ["[]" "server.updater.writer" ":as" "writer"]
                               ["[]" "server.updater.notify" ":as" "notify"]]],
                         :defs {"updater" ["defn"
                                           "updater"
                                           ["db" "op" "op-data" "session-id" "op-id" "op-time"]
                                           ["case"
                                            "op"
                                            [":session/connect"
                                             ["session/connect" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":session/disconnect"
                                             ["session/disconnect" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":user/log-in"
                                             ["user/log-in" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":user/sign-up"
                                             ["user/sign-up" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":user/log-out"
                                             ["user/log-out" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":session/remove-notification"
                                             ["session/remove-notification"
                                              "db"
                                              "op-data"
                                              "session-id"
                                              "op-id"
                                              "op-time"]]
                                            [":session/select-ns"
                                             ["session/select-ns" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":router/change"
                                             ["router/change" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/edit"
                                             ["writer/edit" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/edit-ns"
                                             ["writer/edit-ns" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/select"
                                             ["writer/select" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/point-to"
                                             ["writer/point-to" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/focus"
                                             ["writer/focus" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/go-up"
                                             ["writer/go-up" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/go-down"
                                             ["writer/go-down" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/go-left"
                                             ["writer/go-left" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/go-right"
                                             ["writer/go-right" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/remove-idx"
                                             ["writer/remove-idx" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/copy"
                                             ["writer/copy" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/cut" ["writer/cut" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/paste"
                                             ["writer/paste" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/save-files"
                                             ["writer/save-files" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/collapse"
                                             ["writer/collapse" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/move-next"
                                             ["writer/move-next" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":writer/move-previous"
                                             ["writer/move-previous" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/add-ns" ["ir/add-ns" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/add-def" ["ir/add-def" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/remove-def"
                                             ["ir/remove-def" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/remove-ns"
                                             ["ir/remove-ns" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/append-leaf"
                                             ["ir/append-leaf" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/delete-node"
                                             ["ir/delete-node" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/leaf-after"
                                             ["ir/leaf-after" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/leaf-before"
                                             ["ir/leaf-before" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/expr-before"
                                             ["ir/expr-before" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/expr-after"
                                             ["ir/expr-after" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/indent" ["ir/indent" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/unindent"
                                             ["ir/unindent" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/unindent-leaf"
                                             ["ir/unindent-leaf" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/update-leaf"
                                             ["ir/update-leaf" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/duplicate"
                                             ["ir/duplicate" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":ir/rename" ["ir/rename" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":notify/push-error"
                                             ["notify/push-error" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            "db"]]},
                         :procs []},
         "twig.page-members" {:ns ["ns"
                                   "server.twig.page-members"
                                   [":require"
                                    ["[]" "recollect.bunch" ":refer" ["[]" "create-twig"]]
                                    ["[]" "server.twig.member" ":refer" ["[]" "twig-member"]]]],
                              :defs {"twig-page-members" ["def"
                                                          "twig-page-members"
                                                          ["create-twig"
                                                           ":page-members"
                                                           ["fn"
                                                            ["sessions" "users"]
                                                            ["->>"
                                                             "sessions"
                                                             ["map"
                                                              ["fn"
                                                               ["entry"]
                                                               ["let"
                                                                [[["[]" "k" "session"] "entry"]]
                                                                ["[]"
                                                                 "k"
                                                                 ["twig-member"
                                                                  "session"
                                                                  ["get" "users" [":user-id" "session"]]]]]]]
                                                             ["into" ["{}"]]]]]]},
                              :procs []},
         "util.stack" {:ns ["ns" "server.util.stack"],
                       :defs {"push-bookmark" ["defn"
                                               "push-bookmark"
                                               ["bookmark"]
                                               ["fn"
                                                ["writer"]
                                                ["let"
                                                 [[["{}" "pointer" ":pointer" "stack" ":stack"] "writer"]
                                                  ["idx" ["index-of-bookmark" "stack" "bookmark"]]]
                                                 ["if"
                                                  ["neg?" "idx"]
                                                  ["->"
                                                   "writer"
                                                   ["update" ":stack" ["fn" ["stack"] ["conj" "stack" "bookmark"]]]
                                                   ["assoc" ":pointer" ["count" "stack"]]]
                                                  ["->" "writer" ["assoc" ":pointer" "idx"]]]]]],
                              "index-of-bookmark" ["defn"
                                                   "index-of-bookmark"
                                                   [["stack" "bookmark"] ["index-of-bookmark" "stack" "bookmark" "0"]]
                                                   [["stack" "bookmark" "idx"]
                                                    ["if"
                                                     ["empty?" "stack"]
                                                     "-1"
                                                     ["if"
                                                      ["=bookmark?" "bookmark" ["first" "stack"]]
                                                      "idx"
                                                      ["recur" ["rest" "stack"] "bookmark" ["inc" "idx"]]]]]],
                              "=bookmark?" ["defn"
                                            "=bookmark?"
                                            ["x" "y"]
                                            ["and"
                                             ["=" [":kind" "x"] [":kind" "y"]]
                                             ["=" [":ns" "x"] [":ns" "y"]]
                                             ["=" [":extra" "x"] [":extra" "y"]]]]},
                       :procs []},
         "twig.page-editor" {:ns ["ns"
                                  "server.twig.page-editor"
                                  [":require"
                                   ["[]" "recollect.bunch" ":refer" ["[]" "create-twig"]]
                                   ["[]" "server.util" ":refer" ["[]" "same-buffer?"]]]],
                             :defs {"twig-page-editor" ["def"
                                                        "twig-page-editor"
                                                        ["create-twig"
                                                         ":page-editor"
                                                         ["fn"
                                                          ["files" "sessions" "writer" "session-id"]
                                                          ["let"
                                                           [["pointer" [":pointer" "writer"]]
                                                            ["stack" [":stack" "writer"]]
                                                            ["bookmark" ["get" "stack" "pointer"]]]
                                                           ["if"
                                                            ["some?" "bookmark"]
                                                            ["let"
                                                             [["ns-text" [":ns" "bookmark"]]]
                                                             ["{}"
                                                              [":focus" [":focus" "bookmark"]]
                                                              [":others"
                                                               ["dissoc"
                                                                ["->>"
                                                                 "sessions"
                                                                 ["map"
                                                                  ["fn"
                                                                   ["entry"]
                                                                   ["let"
                                                                    [["writer" [":writer" ["val" "entry"]]]
                                                                     ["a-bookmark"
                                                                      ["get" [":stack" "writer"] [":pointer" "writer"]]]]
                                                                    ["[]"
                                                                     ["key" "entry"]
                                                                     ["if"
                                                                      ["same-buffer?" "bookmark" "a-bookmark"]
                                                                      [":focus" "a-bookmark"]
                                                                      "nil"]]]]]
                                                                 ["filter" ["fn" ["pair"] ["some?" ["last" "pair"]]]]
                                                                 ["into" ["{}"]]]
                                                                "session-id"]]
                                                              [":expr"
                                                               ["case"
                                                                [":kind" "bookmark"]
                                                                [":ns" ["get-in" "files" ["[]" "ns-text" ":ns"]]]
                                                                [":proc" ["get-in" "files" ["[]" "ns-text" ":proc"]]]
                                                                [":def"
                                                                 ["get-in"
                                                                  "files"
                                                                  ["[]" "ns-text" ":defs" [":extra" "bookmark"]]]]
                                                                "nil"]]]]
                                                            "nil"]]]]]},
                             :procs []},
         "updater.ir" {:ns ["ns"
                            "server.updater.ir"
                            [":require"
                             ["[]" "server.schema" ":as" "schema"]
                             ["[]" "bisection-key.core" ":as" "bisection"]
                             ["[]"
                              "server.util"
                              ":refer"
                              ["[]"
                               "expr?"
                               "leaf?"
                               "bookmark->path"
                               "to-writer"
                               "to-bookmark"
                               "to-keys"
                               "cirru->tree"
                               "pick-second-key"]]]],
                       :defs {"rename" ["defn"
                                        "rename"
                                        ["db" "op-data" "session-id" "op-id" "op-time"]
                                        ["let"
                                         [[["{}" ["kind" ":kind"] ["ns-info" ":ns"] ["extra-info" ":extra"]] "op-data"]]
                                         ["cond"
                                          [["=" ":ns" "kind"]
                                           ["let"
                                            [[["{}" ["old-ns" ":from"] ["new-ns" ":to"]] "ns-info"]
                                             ["expr" ["get-in" "db" ["[]" ":ir" ":files" "old-ns" ":ns"]]]
                                             ["next-id" ["pick-second-key" [":data" "expr"]]]]
                                            ["->"
                                             "db"
                                             ["update-in"
                                              ["[]" ":ir" ":files"]
                                              ["fn"
                                               ["files"]
                                               ["->"
                                                "files"
                                                ["dissoc" "old-ns"]
                                                ["assoc" "new-ns" ["get" "files" "old-ns"]]]]]
                                             ["assoc-in"
                                              ["[]"
                                               ":sessions"
                                               "session-id"
                                               ":writer"
                                               ":stack"
                                               [":index" "op-data"]
                                               ":ns"]
                                              "new-ns"]
                                             ["update-in"
                                              ["[]" ":ir" ":files" "new-ns" ":ns" ":data" "next-id" ":text"]
                                              ["fn" ["x"] "new-ns"]]]]]
                                          [["=" ":def" "kind"]
                                           ["let"
                                            [[["{}" ["old-ns" ":from"] ["new-ns" ":to"]] "ns-info"]
                                             [["{}" ["old-def" ":from"] ["new-def" ":to"]] "extra-info"]
                                             ["expr" ["get-in" "db" ["[]" ":ir" ":files" "old-ns" ":defs" "old-def"]]]
                                             ["next-id" ["pick-second-key" [":data" "expr"]]]]
                                            ["->"
                                             "db"
                                             ["update-in"
                                              ["[]" ":ir" ":files"]
                                              ["fn"
                                               ["files"]
                                               ["->"
                                                "files"
                                                ["update-in"
                                                 ["[]" "old-ns" ":defs"]
                                                 ["fn" ["file"] ["dissoc" "file" "old-def"]]]
                                                ["assoc-in"
                                                 ["[]" "new-ns" ":defs" "new-def"]
                                                 ["get-in" "files" ["[]" "old-ns" ":defs" "old-def"]]]]]]
                                             ["update-in"
                                              ["[]" ":sessions" "session-id" ":writer" ":stack" [":index" "op-data"]]
                                              ["fn"
                                               ["bookmark"]
                                               ["->" "bookmark" ["assoc" ":ns" "new-ns"] ["assoc" ":extra" "new-def"]]]]
                                             ["update-in"
                                              ["[]" ":ir" ":files" "new-ns" ":defs" "new-def" ":data" "next-id" ":text"]
                                              ["fn" ["x"] "new-def"]]]]]
                                          [":else" ["do" ["println" "|Unexpected kind:" "kind"] "db"]]]]],
                              "add-def" ["defn"
                                         "add-def"
                                         ["db" "op-data" "session-id" "op-id" "op-time"]
                                         ["let"
                                          [["selected-ns"
                                            ["get-in" "db" ["[]" ":sessions" "session-id" ":writer" ":selected-ns"]]]
                                           ["user-id" ["get-in" "db" ["[]" ":sessions" "session-id" ":user-id"]]]
                                           ["cirru-expr" ["[]" "|defn" "op-data" ["[]"]]]]
                                          ["assoc-in"
                                           "db"
                                           ["[]" ":ir" ":files" "selected-ns" ":defs" "op-data"]
                                           ["cirru->tree" "cirru-expr" "user-id" "op-time"]]]],
                              "leaf-before" ["defn"
                                             "leaf-before"
                                             ["db" "op-data" "session-id" "op-id" "op-time"]
                                             ["let"
                                              [["writer" ["to-writer" "db" "session-id"]]
                                               ["bookmark" ["to-bookmark" "writer"]]
                                               ["current-key" ["last" [":focus" "bookmark"]]]
                                               ["parent-bookmark" ["update" "bookmark" ":focus" "butlast"]]
                                               ["data-path" ["bookmark->path" "parent-bookmark"]]
                                               ["target-expr" ["get-in" "db" "data-path"]]
                                               ["child-keys" ["to-keys" "target-expr"]]
                                               ["idx" [".indexOf" "child-keys" "current-key"]]
                                               ["next-id"
                                                ["bisection/bisect"
                                                 ["if"
                                                  ["zero?" "idx"]
                                                  "bisection/min-id"
                                                  ["get" "child-keys" ["dec" "idx"]]]
                                                 "current-key"]]
                                               ["user-id" ["get-in" "db" ["[]" ":sessions" "session-id" ":user-id"]]]
                                               ["new-leaf"
                                                ["assoc" "schema/leaf" ":time" "op-time" ":author" "user-id"]]]
                                              ["->"
                                               "db"
                                               ["update-in"
                                                "data-path"
                                                ["fn" ["expr"] ["assoc-in" "expr" ["[]" ":data" "next-id"] "new-leaf"]]]
                                               ["update-in"
                                                ["[]"
                                                 ":sessions"
                                                 "session-id"
                                                 ":writer"
                                                 ":stack"
                                                 [":pointer" "writer"]
                                                 ":focus"]
                                                ["fn" ["focus"] ["conj" ["vec" ["butlast" "focus"]] "next-id"]]]]]],
                              "leaf-after" ["defn"
                                            "leaf-after"
                                            ["db" "op-data" "session-id" "op-id" "op-time"]
                                            ["let"
                                             [["writer" ["get-in" "db" ["[]" ":sessions" "session-id" ":writer"]]]
                                              [["{}" "stack" ":stack" "pointer" ":pointer"] "writer"]
                                              ["bookmark" ["get" "stack" "pointer"]]
                                              ["current-key" ["last" [":focus" "bookmark"]]]
                                              ["parent-bookmark" ["update" "bookmark" ":focus" "butlast"]]
                                              ["data-path" ["bookmark->path" "parent-bookmark"]]
                                              ["target-expr" ["get-in" "db" "data-path"]]
                                              ["child-keys" ["vec" ["sort" ["keys" [":data" "target-expr"]]]]]
                                              ["idx" [".indexOf" "child-keys" "current-key"]]
                                              ["next-id"
                                               ["bisection/bisect"
                                                "current-key"
                                                ["if"
                                                 ["=" "idx" ["dec" ["count" "child-keys"]]]
                                                 "bisection/max-id"
                                                 ["get" "child-keys" ["inc" "idx"]]]]]
                                              ["user-id" ["get-in" "db" ["[]" ":sessions" "session-id" ":user-id"]]]
                                              ["new-leaf" ["assoc" "schema/leaf" ":time" "op-time" ":author" "user-id"]]]
                                             ["->"
                                              "db"
                                              ["update-in"
                                               "data-path"
                                               ["fn" ["expr"] ["assoc-in" "expr" ["[]" ":data" "next-id"] "new-leaf"]]]
                                              ["update-in"
                                               ["[]"
                                                ":sessions"
                                                "session-id"
                                                ":writer"
                                                ":stack"
                                                [":pointer" "writer"]
                                                ":focus"]
                                               ["fn" ["focus"] ["conj" ["vec" ["butlast" "focus"]] "next-id"]]]]]],
                              "remove-ns" ["defn"
                                           "remove-ns"
                                           ["db" "op-data" "session-id" "op-id" "op-time"]
                                           ["->"
                                            "db"
                                            ["update-in"
                                             ["[]" ":ir" ":files"]
                                             ["fn" ["files"] ["dissoc" "files" "op-data"]]]]],
                              "duplicate" ["defn"
                                           "duplicate"
                                           ["db" "op-data" "session-id" "op-id" "op-time"]
                                           ["let"
                                            [["writer" ["to-writer" "db" "session-id"]]
                                             ["bookmark" ["to-bookmark" "writer"]]
                                             ["target-expr" ["get-in" "db" ["bookmark->path" "bookmark"]]]
                                             ["parent-path" ["bookmark->path" ["update" "bookmark" ":focus" "butlast"]]]
                                             ["parent-expr" ["get-in" "db" "parent-path"]]
                                             ["child-keys" ["to-keys" "parent-expr"]]
                                             ["last-coord" ["last" [":focus" "bookmark"]]]
                                             ["idx" [".indexOf" "child-keys" "last-coord"]]
                                             ["next-id"
                                              ["if"
                                               ["=" "idx" ["dec" ["count" "child-keys"]]]
                                               "bisection/max-id"
                                               ["bisection/bisect" "last-coord" ["get" "child-keys" ["inc" "idx"]]]]]]
                                            ["->"
                                             "db"
                                             ["update-in"
                                              "parent-path"
                                              ["fn"
                                               ["expr"]
                                               ["update"
                                                "expr"
                                                ":data"
                                                ["fn" ["data"] ["assoc" "data" "next-id" "target-expr"]]]]]
                                             ["update-in"
                                              ["[]"
                                               ":sessions"
                                               "session-id"
                                               ":writer"
                                               ":stack"
                                               [":pointer" "writer"]
                                               ":focus"]
                                              ["fn" ["focus"] ["conj" ["vec" ["butlast" "focus"]] "next-id"]]]]]],
                              "expr-before" ["defn"
                                             "expr-before"
                                             ["db" "op-data" "session-id" "op-id" "op-time"]
                                             ["let"
                                              [["writer" ["to-writer" "db" "session-id"]]
                                               ["bookmark" ["to-bookmark" "writer"]]
                                               ["current-key" ["last" [":focus" "bookmark"]]]
                                               ["parent-bookmark" ["update" "bookmark" ":focus" "butlast"]]
                                               ["data-path" ["bookmark->path" "parent-bookmark"]]
                                               ["target-expr" ["get-in" "db" "data-path"]]
                                               ["child-keys" ["to-keys" "target-expr"]]
                                               ["idx" [".indexOf" "child-keys" "current-key"]]
                                               ["next-id"
                                                ["bisection/bisect"
                                                 ["if"
                                                  ["zero?" "idx"]
                                                  "bisection/min-id"
                                                  ["get" "child-keys" ["dec" "idx"]]]
                                                 "current-key"]]
                                               ["user-id" ["get-in" "db" ["[]" ":sessions" "session-id" ":user-id"]]]
                                               ["new-leaf"
                                                ["assoc" "schema/leaf" ":time" "op-time" ":author" "user-id"]]
                                               ["new-expr"
                                                ["->"
                                                 "schema/expr"
                                                 ["assoc" ":time" "op-time" ":author" "user-id"]
                                                 ["assoc-in" ["[]" ":data" "bisection/mid-id"] "new-leaf"]]]]
                                              ["->"
                                               "db"
                                               ["update-in"
                                                "data-path"
                                                ["fn" ["expr"] ["assoc-in" "expr" ["[]" ":data" "next-id"] "new-expr"]]]
                                               ["update-in"
                                                ["[]"
                                                 ":sessions"
                                                 "session-id"
                                                 ":writer"
                                                 ":stack"
                                                 [":pointer" "writer"]
                                                 ":focus"]
                                                ["fn"
                                                 ["focus"]
                                                 ["conj" ["vec" ["butlast" "focus"]] "next-id" "bisection/mid-id"]]]]]],
                              "update-leaf" ["defn"
                                             "update-leaf"
                                             ["db" "op-data" "session-id" "op-id" "op-time"]
                                             ["let"
                                              [["writer" ["get-in" "db" ["[]" ":sessions" "session-id" ":writer"]]]
                                               ["bookmark" ["get" [":stack" "writer"] [":pointer" "writer"]]]
                                               ["data-path" ["bookmark->path" "bookmark"]]]
                                              ["->"
                                               "db"
                                               ["update-in"
                                                "data-path"
                                                ["fn" ["leaf"] ["assoc" "leaf" ":text" "op-data"]]]]]],
                              "unindent" ["defn"
                                          "unindent"
                                          ["db" "op-data" "session-id" "op-id" "op-time"]
                                          ["let"
                                           [["writer" ["get-in" "db" ["[]" ":sessions" "session-id" ":writer"]]]
                                            ["bookmark" ["get" [":stack" "writer"] [":pointer" "writer"]]]
                                            ["parent-bookmark" ["update" "bookmark" ":focus" "butlast"]]
                                            ["last-coord" ["last" [":focus" "bookmark"]]]
                                            ["parent-path" ["bookmark->path" "parent-bookmark"]]]
                                           ["->"
                                            "db"
                                            ["update-in"
                                             "parent-path"
                                             ["fn"
                                              ["base-expr"]
                                              ["let"
                                               [["expr" ["get-in" "base-expr" ["[]" ":data" "last-coord"]]]
                                                ["child-keys" ["vec" ["sort" ["keys" [":data" "base-expr"]]]]]
                                                ["children" ["->>" [":data" "expr"] ["sort-by" "first"] ["map" "val"]]]
                                                ["idx" [".indexOf" "child-keys" "last-coord"]]
                                                ["limit-id"
                                                 ["if"
                                                  ["=" "idx" ["dec" ["count" "child-keys"]]]
                                                  "bisection/max-id"
                                                  ["get" "child-keys" ["inc" "idx"]]]]]
                                               ["loop"
                                                ["[]" "result" "base-expr" "xs" "children" "next-id" "last-coord"]
                                                ["if"
                                                 ["empty?" "xs"]
                                                 "result"
                                                 ["recur"
                                                  ["assoc-in" "result" ["[]" ":data" "next-id"] ["first" "xs"]]
                                                  ["rest" "xs"]
                                                  ["bisection/bisect" "next-id" "limit-id"]]]]]]]]]],
                              "indent" ["defn"
                                        "indent"
                                        ["db" "op-data" "session-id" "op-id" "op-time"]
                                        ["let"
                                         [["writer" ["get-in" "db" ["[]" ":sessions" "session-id" ":writer"]]]
                                          [["{}" "stack" ":stack" "pointer" ":pointer"] "writer"]
                                          ["bookmark" ["get" "stack" "pointer"]]
                                          ["data-path" ["bookmark->path" "bookmark"]]
                                          ["user-id" ["get-in" "db" ["[]" ":sessions" "session-id" ":user-id"]]]
                                          ["new-expr" ["assoc" "schema/expr" ":time" "op-time" ":author" "user-id"]]]
                                         ["->"
                                          "db"
                                          ["update-in"
                                           "data-path"
                                           ["fn"
                                            ["node"]
                                            ["assoc-in" "new-expr" ["[]" ":data" "bisection/mid-id"] "node"]]]
                                          ["update-in"
                                           ["[]" ":sessions" "session-id" ":writer" ":stack" "pointer" ":focus"]
                                           ["fn"
                                            ["focus"]
                                            ["vec"
                                             ["concat" ["butlast" "focus"] ["[]" ["last" "focus"] "bisection/mid-id"]]]]]]]],
                              "remove-def" ["defn"
                                            "remove-def"
                                            ["db" "op-data" "session-id" "op-id" "op-time"]
                                            ["let"
                                             [["selected-ns"
                                               ["get-in" "db" ["[]" ":sessions" "session-id" ":writer" ":selected-ns"]]]]
                                             ["update-in"
                                              "db"
                                              ["[]" ":ir" ":files" "selected-ns" ":defs"]
                                              ["fn" ["defs"] ["dissoc" "defs" "op-data"]]]]],
                              "append-leaf" ["defn"
                                             "append-leaf"
                                             ["db" "op-data" "session-id" "op-id" "op-time"]
                                             ["let"
                                              [["writer" ["get-in" "db" ["[]" ":sessions" "session-id" ":writer"]]]
                                               [["{}" ["stack" ":stack"] ["pointer" ":pointer"]] "writer"]
                                               ["bookmark" ["get" "stack" "pointer"]]
                                               ["focus" [":focus" "bookmark"]]
                                               ["user-id" ["get-in" "db" ["[]" ":sessions" "session-id" ":user-id"]]]
                                               ["new-leaf"
                                                ["assoc" "schema/leaf" ":author" "user-id" ":time" "op-time"]]
                                               ["expr-path" ["bookmark->path" "bookmark"]]
                                               ["target-expr" ["get-in" "db" "expr-path"]]
                                               ["new-id"
                                                ["if"
                                                 ["empty?" [":data" "target-expr"]]
                                                 "bisection/mid-id"
                                                 ["let"
                                                  [["max-entry" ["apply" "max" ["keys" [":data" "target-expr"]]]]]
                                                  ["bisection/bisect" "max-entry" "bisection/max-id"]]]]]
                                              ["->"
                                               "db"
                                               ["update-in"
                                                "expr-path"
                                                ["fn"
                                                 ["expr"]
                                                 ["if"
                                                  ["expr?" "expr"]
                                                  ["assoc-in" "expr" ["[]" ":data" "new-id"] "new-leaf"]
                                                  "expr"]]]
                                               ["update-in"
                                                ["[]"
                                                 ":sessions"
                                                 "session-id"
                                                 ":writer"
                                                 ":stack"
                                                 [":pointer" "writer"]
                                                 ":focus"]
                                                ["fn" ["focus"] ["conj" "focus" "new-id"]]]]]],
                              "expr-after" ["defn"
                                            "expr-after"
                                            ["db" "op-data" "session-id" "op-id" "op-time"]
                                            ["let"
                                             [["writer" ["to-writer" "db" "session-id"]]
                                              ["bookmark" ["to-bookmark" "writer"]]
                                              ["current-key" ["last" [":focus" "bookmark"]]]
                                              ["parent-bookmark" ["update" "bookmark" ":focus" "butlast"]]
                                              ["data-path" ["bookmark->path" "parent-bookmark"]]
                                              ["target-expr" ["get-in" "db" "data-path"]]
                                              ["child-keys" ["to-keys" "target-expr"]]
                                              ["idx" [".indexOf" "child-keys" "current-key"]]
                                              ["next-id"
                                               ["bisection/bisect"
                                                "current-key"
                                                ["if"
                                                 ["=" "idx" ["dec" ["count" "child-keys"]]]
                                                 "bisection/max-id"
                                                 ["get" "child-keys" ["inc" "idx"]]]]]
                                              ["user-id" ["get-in" "db" ["[]" ":sessions" "session-id" ":user-id"]]]
                                              ["new-leaf" ["assoc" "schema/leaf" ":time" "op-time" ":author" "user-id"]]
                                              ["new-expr"
                                               ["->"
                                                "schema/expr"
                                                ["assoc" ":time" "op-time" ":author" "user-id"]
                                                ["assoc-in" ["[]" ":data" "bisection/mid-id"] "new-leaf"]]]]
                                             ["->"
                                              "db"
                                              ["update-in"
                                               "data-path"
                                               ["fn" ["expr"] ["assoc-in" "expr" ["[]" ":data" "next-id"] "new-expr"]]]
                                              ["update-in"
                                               ["[]"
                                                ":sessions"
                                                "session-id"
                                                ":writer"
                                                ":stack"
                                                [":pointer" "writer"]
                                                ":focus"]
                                               ["fn"
                                                ["focus"]
                                                ["conj" ["vec" ["butlast" "focus"]] "next-id" "bisection/mid-id"]]]]]],
                              "add-ns" ["defn"
                                        "add-ns"
                                        ["db" "op-data" "session-id" "op-id" "op-time"]
                                        ["let"
                                         [["user-id" ["get-in" "db" ["[]" ":sessions" "session-id" ":user-id"]]]
                                          ["cirru-expr" ["[]" "|ns" "op-data"]]
                                          ["default-expr" ["cirru->tree" "cirru-expr" "user-id" "op-time"]]
                                          ["empty-expr" ["cirru->tree" ["[]"] "user-id" "op-time"]]]
                                         ["assoc-in"
                                          "db"
                                          ["[]" ":ir" ":files" "op-data"]
                                          ["assoc" "schema/file" ":ns" "default-expr" ":proc" "empty-expr"]]]],
                              "delete-leaf" ["defn"
                                             "delete-node"
                                             ["db" "op-data" "session-id" "op-id" "op-time"]
                                             ["let"
                                              [["writer" ["get-in" "db" ["[]" ":sessions" "session-id" ":writer"]]]
                                               ["bookmark" ["get" [":stack" "writer"] [":pointer" "writer"]]]
                                               ["parent-bookmark" ["update" "bookmark" ":focus" "butlast"]]
                                               ["data-path" ["bookmark->path" "parent-bookmark"]]
                                               ["child-keys" ["sort" ["keys" [":data" ["get-in" "db" "data-path"]]]]]
                                               ["deleted-key" ["last" [":focus" "bookmark"]]]
                                               ["idx" [".indexOf" "child-keys" "deleted-key"]]]
                                              ["->"
                                               "db"
                                               ["update-in"
                                                "data-path"
                                                ["fn"
                                                 ["expr"]
                                                 ["update"
                                                  "expr"
                                                  ":data"
                                                  ["fn" ["children"] ["dissoc" "children" "deleted-key"]]]]]
                                               ["update-in"
                                                ["[]"
                                                 ":sessions"
                                                 "session-id"
                                                 ":writer"
                                                 ":stack"
                                                 [":pointer" "writer"]
                                                 ":focus"]
                                                ["fn"
                                                 ["focus"]
                                                 ["if"
                                                  ["zero?" "idx"]
                                                  ["vec" ["butlast" "focus"]]
                                                  ["assoc"
                                                   "focus"
                                                   ["dec" ["count" "focus"]]
                                                   ["get" ["vec" "child-keys"] ["dec" "idx"]]]]]]]]],
                              "unindent-leaf" ["defn"
                                               "unindent-leaf"
                                               ["db" "op-data" "session-id" "op-id" "op-time"]
                                               ["let"
                                                [["writer" ["get-in" "db" ["[]" ":sessions" "session-id" ":writer"]]]
                                                 ["bookmark" ["get" [":stack" "writer"] [":pointer" "writer"]]]
                                                 ["parent-bookmark" ["update" "bookmark" ":focus" "butlast"]]
                                                 ["parent-path" ["bookmark->path" "parent-bookmark"]]
                                                 ["parent-expr" ["get-in" "db" "parent-path"]]]
                                                ["if"
                                                 ["=" "1" ["count" [":data" "parent-expr"]]]
                                                 ["->"
                                                  "db"
                                                  ["update-in"
                                                   "parent-path"
                                                   ["fn" ["expr"] ["first" ["vals" [":data" "expr"]]]]]
                                                  ["update-in"
                                                   ["[]"
                                                    ":sessions"
                                                    "session-id"
                                                    ":writer"
                                                    ":stack"
                                                    [":pointer" "writer"]
                                                    ":focus"]
                                                   ["fn" ["focus"] ["vec" ["butlast" "focus"]]]]]
                                                 "db"]]]},
                       :procs []}},
 :options {:port 7011}}
